swagger: '2.0'
info:
  version: '1.0'
  title: Zype-V1
  description: 'TODO: Add a description'
  license:
    name: MIT
    url: http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
host: polls.apiblueprint.org
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /videos:
    get:
      description: ''
      summary: List Videos
      tags:
      - Videos
      operationId: VideosGet
      produces:
      - application/json
      parameters:
      - name: active
        in: query
        required: false
        type: boolean
        description: Filter by active, inactive, or all records
      - name: category
        in: query
        required: false
        type: string
        description: >-
          Filter by category value

          + Examples
              + `category[genre]=drama`
              + use `category![genre]=drama` to exclude by category value
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          + Examples
              + `2017-01-01T00:00:00-00:00`
              + `1483228800`
      - name: friendly_title
        in: query
        required: false
        type: string
        description: Filter by friendly title
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=3049df039402ld3029f930`
              + use `id!=3049df039402ld3029f930` to exclude by id
      - name: hulu_id
        in: query
        required: false
        type: string
        description: Filter by Hulu ID
      - name: vimeo_id
        in: query
        required: false
        type: string
        description: Filter by Vimeo ID
      - name: youtube_id
        in: query
        required: false
        type: string
        description: Filter by YouTube ID
      - name: zobject_id
        in: query
        required: false
        type: string
        description: Filter by Zobject ID
      - name: mature_content
        in: query
        required: false
        type: boolean
        description: Filter records flagged as mature
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: on_air
        in: query
        required: false
        type: boolean
        description: Filter records that are either on or off air
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      - name: published_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter records by published date using times in ISO8601 format

          + Examples:
              + `2017-01-01T00:00:00-00:00`
              + `1483228800`
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: source_id
        in: query
        required: false
        type: string
        description: Filter by source identifier
      - name: type
        in: query
        required: false
        type: string
        description: >-
          Filter by type

          + Examples:
              + `zype`
              + `hulu`
              + `youtube`
              + `crunchyroll`
      - name: dpt
        in: query
        required: false
        type: string
        description: ''
      - name: crunchyroll_id
        in: query
        required: false
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create a New Video
      tags:
      - Videos
      operationId: VideosPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoRequest'
      - name: active
        in: query
        required: false
        type: string
        description: ''
      - name: category
        in: query
        required: false
        type: string
        description: ''
      - name: created_at
        in: query
        required: false
        type: string
        description: ''
      - name: dpt
        in: query
        required: false
        type: string
        description: ''
      - name: crunchyroll_id
        in: query
        required: false
        type: string
        description: ''
      - name: friendly_title
        in: query
        required: false
        type: string
        description: ''
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: hulu_id
        in: query
        required: false
        type: string
        description: ''
      - name: vimeo_id
        in: query
        required: false
        type: string
        description: ''
      - name: youtube_id
        in: query
        required: false
        type: string
        description: ''
      - name: zobject_id
        in: query
        required: false
        type: string
        description: ''
      - name: mature_content
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: on_air
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: published_at
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: source_id
        in: query
        required: false
        type: string
        description: ''
      - name: type
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{id}:
    get:
      description: ''
      summary: View Video
      tags:
      - Videos
      operationId: VideosByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Video
      tags:
      - Videos
      operationId: VideosByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{id}/add_zobjects:
    put:
      description: ''
      summary: Add Zobject(s) to Video
      tags:
      - Videos
      operationId: VideosAddZobjectsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddZobject(s)ToVideoRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{id}/remove_zobjects:
    put:
      description: ''
      summary: Remove Zobject(s) from Video
      tags:
      - Videos
      operationId: VideosRemoveZobjectsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      - name: body
        in: body
        required: true
        description: ''
        schema:
          type: object
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{id}/download:
    get:
      description: ''
      summary: Download original source file
      tags:
      - Videos
      operationId: VideosDownloadByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        200:
          description: ''
          schema:
            type: string
          examples:
            text/plain: >-
              "response": {
                  "url": "https://download-url.com",
                  "filesize": 63851164
              }
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists:
    get:
      description: ''
      summary: List Playlists
      tags:
      - Playlists
      operationId: PlaylistsGet
      produces:
      - application/json
      parameters:
      - name: active
        in: query
        required: false
        type: boolean
        description: Filter by active, inactive, or all records
      - name: category
        in: query
        required: false
        type: string
        description: >-
          Filter by category value

          + Examples
              + `category[genre]=drama`
              + use `category![genre]=drama` to exclude by category value
      - name: title
        in: query
        required: false
        type: string
        description: Filter by title
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=53d1457962702d4d66000000`
              + use `id!=53d1457962702d4d66000000` to exclude by ID
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Playlist
      tags:
      - Playlists
      operationId: PlaylistsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/PlaylistRequest'
      - name: active
        in: query
        required: false
        type: string
        description: ''
      - name: category
        in: query
        required: false
        type: string
        description: ''
      - name: title
        in: query
        required: false
        type: string
        description: ''
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{id}:
    get:
      description: ''
      summary: View Playlist
      tags:
      - Playlists
      operationId: PlaylistsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Playlist
      tags:
      - Playlists
      operationId: PlaylistsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Playlist'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Playlist
      tags:
      - Playlists
      operationId: PlaylistsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /playlists/53d1457962702d4d66000000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Playlist1
        x-testDescription: Testcase for testing endpoint Delete Playlist
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{id}/videos:
    get:
      description: ''
      summary: List Playlist Videos
      tags:
      - Playlists
      operationId: PlaylistsVideosByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of playlist
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{id}/add_video:
    put:
      description: ''
      summary: Add a video to a playlist
      tags:
      - Playlists
      operationId: PlaylistsAddVideoByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of playlist
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddAVideoToAPlaylistRequest'
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{id}/remove_video:
    put:
      description: ''
      summary: Remove a video from a playlist
      tags:
      - Playlists
      operationId: PlaylistsRemoveVideoByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of playlist
      - name: body
        in: body
        required: true
        description: ''
        schema:
          type: string
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/relationships:
    get:
      description: Returns a list of playlists and its relationships
      summary: View Relationsips
      tags:
      - Managing Playlist Relationships
      operationId: PlaylistsRelationshipsGet
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ViewRelationsipsResponse'
          examples:
            application/json:
              playlists:
              - id: 586124bfa54d7535cb001fc2
                title: Playlist A
                priority: 0
                playlists:
                - id: 5942dde0a54d750e3b000042
                  title: Playlist A.1
                  priority: 0
              - id: 58d1718aa54d750bf100002e
                title: Playlist B
                priority: 1
                playlists:
                - id: 5942defea54d750e3b000045
                  title: Playlist B.1
                  priority: 0
                  playlists:
                  - id: 586124bfa54d7535cb001fba
                    title: Playlist B.1.1
                    priority: 0
                - id: 586124bea54d7535cb001fb1
                  title: Playlist B.2
                  priority: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /categories:
    get:
      description: ''
      summary: List Categories
      tags:
      - Categories
      operationId: CategoriesGet
      produces:
      - application/json
      parameters:
      - name: title
        in: query
        required: false
        type: string
        description: Filter by title
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=53d1457962702d4d66000000`
              + use `id!=53d1457962702d4d66000000` to exclude by id
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Category
      tags:
      - Categories
      operationId: CategoriesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Category'
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: title
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/CategoryMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /categories/{id}:
    get:
      description: ''
      summary: View Category
      tags:
      - Categories
      operationId: CategoriesByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/CategoryMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Category
      tags:
      - Categories
      operationId: CategoriesByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Category'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Category
      tags:
      - Categories
      operationId: CategoriesByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /categories/53d1457962702d4d66000000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Category1
        x-testDescription: Testcase for testing endpoint Delete Category
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /app:
    get:
      description: ''
      summary: View App
      tags:
      - Apps
      operationId: AppGet
      produces:
      - application/json
      parameters:
      - name: app_key
        in: query
        required: true
        type: string
        description: App key provided by Zype
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/App'
          examples:
            application/json:
              _id: 593b1ac8830ece0024000005
              active: false
              app_type_id: 1593030e94d740d00530000971
              device_ids: '[593030d64d740d0053000007]'
              site_id: 593031674d740d01cd000000
              title: Apple TV App
              version: 0.1.0
              store_icon_url: https://url
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /devices:
    get:
      description: ''
      summary: List Devices
      tags:
      - Devices
      operationId: DevicesGet
      produces:
      - application/json
      parameters:
      - name: title
        in: query
        required: false
        type: string
        description: Filter by title
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
          examples:
            application/json:
            - _id: 593030d64d740d0053000007
              description: Accessed via desktop HTML5 web browser
              name: Desktop
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /devices/{id}:
    get:
      description: ''
      summary: View Device
      tags:
      - Devices
      operationId: DevicesByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of device
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Device'
          examples:
            application/json:
              _id: 593030d64d740d0053000007
              description: Accessed via desktop HTML5 web browser
              name: Desktop
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /device_categories:
    get:
      description: ''
      summary: List Devices Categories
      tags:
      - Device Categories
      operationId: DeviceCategoriesGet
      produces:
      - application/json
      parameters:
      - name: title
        in: query
        required: false
        type: string
        description: Filter by title
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=593030d74d740d0053000012`
              + use `id!=593030d74d740d0053000012` to exclude by id
      - name: created_at
        in: query
        required: false
        type: string
        description: Filter by when the category was created
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceCategory'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /device_categories/{id}:
    get:
      description: ''
      summary: View Device Category
      tags:
      - Device Categories
      operationId: DeviceCategoriesByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of device category
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/DeviceCategory'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /embed/{video_id}.format:
    get:
      description: "The full URL will look like https://player.zype.com/embed/[video_id].[format]. The format for the player response must be one of Iframes, JavaScript or JSON players \ndepending on device capabilities (Example: html, js, json)"
      summary: View Player
      tags:
      - Players
      operationId: EmbedFormatByVideoIdGet
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: ID of video
      - name: autoplay
        in: query
        required: false
        type: boolean
        description: Whether or not to autoplay on page load
      - name: audio
        in: query
        required: false
        type: boolean
        description: Request audio only
      - name: download
        in: query
        required: false
        type: boolean
        description: Request download only player
      - name: dvr
        in: query
        required: false
        type: boolean
        description: Enable DVR for Zype Live events
      responses:
        200:
          description: ''
          schema:
            type: object
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /manifest/live/{id}:
    get:
      description: Returns an object containing the id and the masked url for the manifest.
      summary: Retrieve Manifest URL
      tags:
      - Master Manifests
      operationId: ManifestLiveByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the resource
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoManifest'
          examples:
            application/json:
              _id: 59db911f6e82c2000100000e
              url: https://1hc0aipw92.execute
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{video_id}/segments:
    get:
      description: ''
      summary: List Segments
      tags:
      - Segments
      operationId: VideosSegmentsByVideoIdGet
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/SegmentMetadata'
          examples:
            application/json:
            - _id: 593030e14d740d0053000032
              video_id: 59a6cef251cc430067000440
              start: 90
              end: 120
              description: Description of what the segment is about
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Segment
      tags:
      - Segments
      operationId: VideosSegmentsByVideoIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Segment'
      - name: video_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/SegmentMetadata'
          examples:
            application/json:
              _id: 593030e14d740d0053000032
              video_id: 59a6cef251cc430067000440
              start: 90
              end: 120
              description: Description of what the segment is about
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{video_id}/segments/{id}:
    get:
      description: ''
      summary: View Segment
      tags:
      - Segments
      operationId: VideosSegmentsByVideoIdAndIdGet
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: ID of video
      - name: id
        in: path
        required: true
        type: string
        description: ID of segment
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/SegmentMetadata'
          examples:
            application/json:
              _id: 593030e14d740d0053000032
              video_id: 59a6cef251cc430067000440
              start: 90
              end: 120
              description: Description of what the segment is about
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Segment
      tags:
      - Segments
      operationId: VideosSegmentsByVideoIdAndIdPut
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: ID of video
      - name: id
        in: path
        required: true
        type: string
        description: ID of segment
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/Segment'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/SegmentMetadata'
          examples:
            application/json:
              _id: 593030e14d740d0053000032
              video_id: 59a6cef251cc430067000440
              start: 90
              end: 120
              description: Description of what the segment is about
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Segment
      tags:
      - Segments
      operationId: VideosSegmentsByVideoIdAndIdDelete
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: ID of video
      - name: id
        in: path
        required: true
        type: string
        description: ID of segment
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /videos/5955293f805cd90024000151/segments/593030e14d740d0053000032
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Segment1
        x-testDescription: Testcase for testing endpoint Delete Segment
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /video_imports:
    get:
      description: ''
      summary: List Video Imports
      tags:
      - Video Imports
      operationId: VideoImportsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=59553de4805cd90024000492`
              + use `id!=59553de4805cd90024000492` to exclude by id
      - name: type
        in: query
        required: false
        type: string
        description: >-
          Filter by title

          + Examples
              + hulu
              + youtube
              + crunchyroll
      - name: active
        in: query
        required: false
        type: string
        description: >-
          Filter by active or inactive or all records

          + Examples
              + true
              + false
              + all
      - name: status
        in: query
        required: false
        type: string
        description: >-
          Filter by status of import

          + Examples
              + created
              + ready
      - name: video_source_id
        in: query
        required: false
        type: string
        description: Filter by ID of VideoSource
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoImport'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /video_imports/{id}/add_video:
    put:
      description: ''
      summary: Attaching a Video to a Video Import
      tags:
      - Video Imports
      operationId: VideoImportsAddVideoByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ''
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AttachingAVideoToAVideoImportRequest'
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/VideoImport'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /video_imports/{id}:
    get:
      description: ''
      summary: View Video Import
      tags:
      - Video Imports
      operationId: VideoImportsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of segment
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoImport'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /video_sources:
    get:
      description: ''
      summary: List Video Sources
      tags:
      - Video Sources
      operationId: VideoSourcesGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: type
        in: query
        required: false
        type: string
        description: >-
          Filter by title

          + Examples
              + hulu
              + youtube
              + crunchyroll
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoSourceMetadata'
          examples:
            application/json:
            - name: Video Import
              guid: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
              affiliate_code: az-58106-hrye
              partner_name: Hulu Name
              category_id: 59552426cbd3d90001000000
              auto_activate: false
              auto_add: false
              auto_deactivate: false
              sync_interval: daily
              sync_video_data_source: true
              url: ''
              import_from: null
              import_to: null
              editable: true
              video_count: 0
              _id: 5468f40d4c616e0a770d0000
              created_at: '"2014-11-16T18:59:25.42+00:00"'
              updated_at: null
              status: created
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: Only MRSS video sources may be created via the API at this time.
      summary: Create Video Source
      tags:
      - Video Sources
      operationId: VideoSourcesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoSourceRequest'
      - name: type
        in: query
        required: false
        type: string
        description: ''
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/VideoSourceMetadata'
          examples:
            application/json:
              name: Video Import
              guid: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
              affiliate_code: az-58106-hrye
              partner_name: Hulu Name
              category_id: 59552426cbd3d90001000000
              auto_activate: false
              auto_add: false
              auto_deactivate: false
              sync_interval: daily
              sync_video_data_source: true
              url: ''
              import_from: null
              import_to: null
              editable: true
              video_count: 0
              _id: 5468f40d4c616e0a770d0000
              created_at: '"2014-11-16T18:59:25.42+00:00"'
              updated_at: null
              status: created
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /video_sources/{id}:
    get:
      description: ''
      summary: View Video Source
      tags:
      - Video Sources
      operationId: VideoSourcesByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video source
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoSourceMetadata'
          examples:
            application/json:
              name: Video Import
              guid: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
              affiliate_code: az-58106-hrye
              partner_name: Hulu Name
              category_id: 59552426cbd3d90001000000
              auto_activate: false
              auto_add: false
              auto_deactivate: false
              sync_interval: daily
              sync_video_data_source: true
              url: ''
              import_from: null
              import_to: null
              editable: true
              video_count: 0
              _id: 5468f40d4c616e0a770d0000
              created_at: '"2014-11-16T18:59:25.42+00:00"'
              updated_at: null
              status: created
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Video Source
      tags:
      - Video Sources
      operationId: VideoSourcesByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video source
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoSourceRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoSourceMetadata'
          examples:
            application/json:
              name: Video Import
              guid: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
              affiliate_code: az-58106-hrye
              partner_name: Hulu Name
              category_id: 59552426cbd3d90001000000
              auto_activate: false
              auto_add: false
              auto_deactivate: false
              sync_interval: daily
              sync_video_data_source: true
              url: ''
              import_from: null
              import_to: null
              editable: true
              video_count: 0
              _id: 5468f40d4c616e0a770d0000
              created_at: '"2014-11-16T18:59:25.42+00:00"'
              updated_at: null
              status: created
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete a Video Source
      tags:
      - Video Sources
      operationId: VideoSourcesByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of video source
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /video_sources/593970874c209f0001000005
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete a Video Source1
        x-testDescription: Testcase for testing endpoint Delete a Video Source
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /categories/{category_id}/content_rules:
    get:
      description: ''
      summary: List Content Rules for a Category
      tags:
      - Category Content Rules
      operationId: CategoriesContentRulesByCategoryIdGet
      produces:
      - application/json
      parameters:
      - name: category_id
        in: path
        required: true
        type: string
        description: category ID
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Category Content Rule
      tags:
      - Category Content Rules
      operationId: CategoriesContentRulesByCategoryIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ContentRuleRequest'
      - name: category_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /categories/{category_id}/content_rules/{id}:
    get:
      description: ''
      summary: View Category Content Rule
      tags:
      - Category Content Rules
      operationId: CategoriesContentRulesByCategoryIdAndIdGet
      produces:
      - application/json
      parameters:
      - name: category_id
        in: path
        required: true
        type: string
        description: category ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Category Content Rule
      tags:
      - Category Content Rules
      operationId: CategoriesContentRulesByCategoryIdAndIdPut
      produces:
      - application/json
      parameters:
      - name: category_id
        in: path
        required: true
        type: string
        description: category ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ContentRuleRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Category Content Rule
      tags:
      - Category Content Rules
      operationId: CategoriesContentRulesByCategoryIdAndIdDelete
      produces:
      - application/json
      parameters:
      - name: category_id
        in: path
        required: true
        type: string
        description: category ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /categories/5389352e69702d401b000001/content_rules/5389352e69702d401b000000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Category Content Rule1
        x-testDescription: Testcase for testing endpoint Delete Category Content Rule
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{playlist_id}/content_rules:
    get:
      description: ''
      summary: List Content Rules for a Playlist
      tags:
      - Playlist Content Rules
      operationId: PlaylistsContentRulesByPlaylistIdGet
      produces:
      - application/json
      parameters:
      - name: playlist_id
        in: path
        required: true
        type: string
        description: playlist ID
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Playlist Content Rule
      tags:
      - Playlist Content Rules
      operationId: PlaylistsContentRulesByPlaylistIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ContentRuleRequest'
      - name: playlist_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{playlist_id}/content_rules/{id}:
    get:
      description: ''
      summary: View Playlist Content Rule
      tags:
      - Playlist Content Rules
      operationId: PlaylistsContentRulesByPlaylistIdAndIdGet
      produces:
      - application/json
      parameters:
      - name: playlist_id
        in: path
        required: true
        type: string
        description: playlist ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Playlist Content Rule
      tags:
      - Playlist Content Rules
      operationId: PlaylistsContentRulesByPlaylistIdAndIdPut
      produces:
      - application/json
      parameters:
      - name: playlist_id
        in: path
        required: true
        type: string
        description: playlist ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ContentRuleRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Playlist Content Rule
      tags:
      - Playlist Content Rules
      operationId: PlaylistsContentRulesByPlaylistIdAndIdDelete
      produces:
      - application/json
      parameters:
      - name: playlist_id
        in: path
        required: true
        type: string
        description: playlist ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /playlists/598de538d26af90584000002/content_rules/5389352e69702d401b000000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Playlist Content Rule1
        x-testDescription: Testcase for testing endpoint Delete Playlist Content Rule
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{video_id}/content_rules:
    get:
      description: ''
      summary: List Content Rules for a Video
      tags:
      - Video Content Rules
      operationId: VideosContentRulesByVideoIdGet
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: video ID
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Video Content Rule
      tags:
      - Video Content Rules
      operationId: VideosContentRulesByVideoIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ContentRuleRequest'
      - name: video_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{video_id}/content_rules/{id}:
    get:
      description: ''
      summary: View Video Content Rule
      tags:
      - Video Content Rules
      operationId: VideosContentRulesByVideoIdAndIdGet
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: video ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Video Content Rule
      tags:
      - Video Content Rules
      operationId: VideosContentRulesByVideoIdAndIdPut
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: video ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ContentRuleRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ContentRuleMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Video Content Rule
      tags:
      - Video Content Rules
      operationId: VideosContentRulesByVideoIdAndIdDelete
      produces:
      - application/json
      parameters:
      - name: video_id
        in: path
        required: true
        type: string
        description: video ID
      - name: id
        in: path
        required: true
        type: string
        description: content rule ID
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /videos/554bfc3e69702d070ef65900/content_rules/5389352e69702d401b000000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Video Content Rule1
        x-testDescription: Testcase for testing endpoint Delete Video Content Rule
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers:
    get:
      description: ''
      summary: List Consumers
      tags:
      - Consumers
      operationId: ConsumersGet
      produces:
      - application/json
      parameters:
      - name: braintree_id
        in: query
        required: false
        type: string
        description: Filter by the consumer's Braintree ID
      - name: stripe_id
        in: query
        required: false
        type: string
        description: Filter by the consumer's Stripe ID
      - name: email
        in: query
        required: false
        type: string
        description: Filter by the consumer's email
      - name: password_token
        in: query
        required: false
        type: string
        description: Filter by the consumer's password token
      - name: rss_token
        in: query
        required: false
        type: string
        description: Filter by the consumer's RSS token
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by id

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: created_at
        in: query
        required: false
        type: string
        description: Filter by when consumer was created
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + `asc`
              + `desc`
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/ConsumerMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Consumers
      tags:
      - Consumers
      operationId: ConsumersPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ConsumerRequest'
      - name: braintree_id
        in: query
        required: false
        type: string
        description: ''
      - name: stripe_id
        in: query
        required: false
        type: string
        description: ''
      - name: created_at
        in: query
        required: false
        type: string
        description: ''
      - name: email
        in: query
        required: false
        type: string
        description: ''
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: password_token
        in: query
        required: false
        type: string
        description: ''
      - name: rss_token
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/ConsumerMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{id}:
    get:
      description: ''
      summary: View Consumer
      tags:
      - Consumers
      operationId: ConsumersByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Consumer ID
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConsumerMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Consumer
      tags:
      - Consumers
      operationId: ConsumersByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Consumer ID
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ConsumerRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConsumerMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Video Consumer
      tags:
      - Consumers
      operationId: ConsumersByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Consumer ID
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /consumers/596d08cc75e3bf0039000002
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Video Consumer1
        x-testDescription: Testcase for testing endpoint Delete Video Consumer
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /pin/acquire:
    post:
      description: ''
      summary: Acquire Device Pin
      tags:
      - Device Linking
      operationId: PinAcquirePost
      produces:
      - application/json
      parameters:
      - name: linked_device_id
        in: query
        required: true
        type: string
        description: Unique ID of the user's device
      - name: type
        in: query
        required: true
        type: string
        description: type of Device to link to
      - name: body
        in: body
        required: true
        description: ''
        schema:
          type: object
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/DevicePin'
          examples:
            application/json:
              _id: 57113fc6f283474159000003
              consumer_id: 5466584169702d4d300d0001
              created_at: '"2017-02-13T11:28:08.352+00:00"'
              deleted_at: null
              linked_device_id: uniqueDeviceID
              pin: ztwp746
              pin_expiration: 2018
              updated_at: null
              linked true: false
              subscription_count: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /pin/status:
    get:
      description: ''
      summary: Retrieve Device Pin
      tags:
      - Device Linking
      operationId: PinStatusGet
      produces:
      - application/json
      parameters:
      - name: linked_device_id
        in: query
        required: true
        type: string
        description: Unique ID of the user's device
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/DevicePin'
          examples:
            application/json:
              _id: 57113fc6f283474159000003
              consumer_id: 5466584169702d4d300d0001
              created_at: '"2017-02-13T11:28:08.352+00:00"'
              deleted_at: null
              linked_device_id: uniqueDeviceID
              pin: ztwp746
              pin_expiration: 2018
              updated_at: null
              linked true: false
              subscription_count: 1
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /pin/link:
    put:
      description: ''
      summary: Link
      tags:
      - Device Linking
      operationId: PinLinkPut
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: query
        required: true
        type: string
        description: ID of consumer to link device to
      - name: pin
        in: query
        required: true
        type: string
        description: The value for the acquired device pin
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConsumerMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /pin/unlink:
    put:
      description: ''
      summary: Unlink
      tags:
      - Device Linking
      operationId: PinUnlinkPut
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: query
        required: true
        type: string
        description: ID of consumer to link device to
      - name: pin
        in: query
        required: true
        type: string
        description: The value for the acquired device pin
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ConsumerMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /oauth/token:
    post:
      description: ''
      summary: Refreshing Access Token
      tags:
      - OAuth
      operationId: OauthTokenPost2
      produces:
      - application/json
      parameters:
      - name: client_id
        in: query
        required: true
        type: string
        description: The client ID for your Zype application
      - name: client_secret
        in: query
        required: true
        type: string
        description: The client secret for your Zype application
      - name: refresh_token
        in: query
        required: true
        type: string
        description: Token to use to refresh
      - name: grant_type
        in: query
        required: true
        type: string
        description: Must use `refresh_token`
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/OAuthRefreshRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OAuth'
          examples:
            application/json:
              access_token: 35fc9daad3363fe137e0dfb384246f982548a8a749b997ecb451080c35c22485
              token_type: bearer
              expires_in: 604800
              refresh_token: e90fd4862b5f85868dd97b2f13fbc103af3b8586c34f51acd60266fa3ca91daf
              scope: consumer
              created_at: 1504651738
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /oauth/token/status:
    post:
      description: ''
      summary: Access Token Status
      tags:
      - OAuth
      operationId: OauthTokenStatusPost
      produces:
      - application/json
      parameters:
      - name: access_token
        in: query
        required: true
        type: string
        description: Access Token created via OAuth
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OAuthStatus'
          examples:
            application/json:
              resource_owner_id: 5a032827aff38bb160000001
              scopes:
              - consumer
              expires_in_seconds: 604600
              application:
                uid: 3f3fc04fa3656113f95665cce3c2453fe8cd64eed24c949a2ce232662528d95
              created_at: 1510156376
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumer/videos:
    get:
      description: ''
      summary: List All Video Entitlements
      tags:
      - Video Entitlements
      operationId: ConsumerVideosGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: expires_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: created_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: transaction_id
        in: query
        required: false
        type: string
        description: Filter by transaction
      - name: transaction_type
        in: query
        required: false
        type: string
        description: >-
          + Examples
              + purchase
              + subscription
              + rental
      - name: video_id
        in: query
        required: false
        type: string
        description: Filter by video
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/VideoEntitlementMetadata'
          examples:
            application/json:
            - _id: 574df05109838853df000001
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{consumer_id}/videos:
    get:
      description: ''
      summary: List Video Entitlements
      tags:
      - Video Entitlements
      operationId: ConsumersVideosByConsumerIdGet
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoEntitlementMetadata'
          examples:
            application/json:
              _id: 574df05109838853df000001
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Video Entitlement
      tags:
      - Video Entitlements
      operationId: ConsumersVideosByConsumerIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoEntitlementRequest'
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/VideoEntitlementMetadata'
          examples:
            application/json:
              _id: 574df05109838853df000001
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{consumer_id}/videos/{id}:
    get:
      description: ''
      summary: View Video Entitlement
      tags:
      - Video Entitlements
      operationId: ConsumersVideosByConsumerIdAndIdGet
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      - name: id
        in: path
        required: true
        type: string
        description: ID of the video entitlement
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoEntitlementMetadata'
          examples:
            application/json:
              _id: 574df05109838853df000001
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Video Entitlement
      tags:
      - Video Entitlements
      operationId: ConsumersVideosByConsumerIdAndIdPut
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      - name: id
        in: path
        required: true
        type: string
        description: ID of the video entitlement
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoEntitlementRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoEntitlementMetadata'
          examples:
            application/json:
              _id: 574df05109838853df000001
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete a Video Entitlement
      tags:
      - Video Entitlements
      operationId: ConsumersVideosByConsumerIdAndIdDelete
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      - name: id
        in: path
        required: true
        type: string
        description: ID of the video entitlement
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /consumers/5a0474c6aff38b1df4000036/videos/574decf509838854f1000183
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete a Video Entitlement1
        x-testDescription: Testcase for testing endpoint Delete a Video Entitlement
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /videos/{id}/entitled:
    get:
      description: ''
      summary: Check Entitlement
      tags:
      - Video Entitlements
      operationId: VideosEntitledByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the video entitlement
      - name: access_token
        in: query
        required: true
        type: string
        description: OAuth token of a consumer
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/CheckEntitlementResponse'
          examples:
            application/json:
              message: entitled
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumer/playlists:
    get:
      description: ''
      summary: List All Playlist Entitlements
      tags:
      - Playlist Entitlements
      operationId: ConsumerPlaylistsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: expires_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: created_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: transaction_id
        in: query
        required: false
        type: string
        description: Filter by transaction
      - name: transaction_type
        in: query
        required: false
        type: string
        description: >-
          + Examples
              + purchase
              + subscription
              + rental
      - name: playlist_id
        in: query
        required: false
        type: string
        description: Filter by playlist
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/PlaylistEntitlementMetadata'
          examples:
            application/json:
            - _id: 574decf509838854f1000183
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{consumer_id}/playlists:
    get:
      description: ''
      summary: List Playlist Entitlements
      tags:
      - Playlist Entitlements
      operationId: ConsumersPlaylistsByConsumerIdGet
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose playlist entitlements will be retrieved
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistEntitlementMetadata'
          examples:
            application/json:
              _id: 574decf509838854f1000183
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Playlist Entitlement
      tags:
      - Playlist Entitlements
      operationId: ConsumersPlaylistsByConsumerIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/PlaylistEntitlementRequest'
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistEntitlementMetadata'
          examples:
            application/json:
              _id: 574decf509838854f1000183
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{consumer_id}/playlists/{id}:
    get:
      description: ''
      summary: View Playlist Entitlement
      tags:
      - Playlist Entitlements
      operationId: ConsumersPlaylistsByConsumerIdAndIdGet
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      - name: id
        in: path
        required: true
        type: string
        description: ID of the playlist entitlement
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistEntitlementMetadata'
          examples:
            application/json:
              _id: 574decf509838854f1000183
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Playlist Entitlement
      tags:
      - Playlist Entitlements
      operationId: ConsumersPlaylistsByConsumerIdAndIdPut
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      - name: id
        in: path
        required: true
        type: string
        description: ID of the playlist entitlement
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/PlaylistEntitlementRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlaylistEntitlementMetadata'
          examples:
            application/json:
              _id: 574decf509838854f1000183
              consumer_id: 5543e4a269702d070d330600
              created_at: '"2017-05-31T20:13:05.437+00:00"'
              updated_at: null
              video_title: Sample Video
              expires_at: null
              transaction_id: 57214ac2098388d3a800000c
              transaction_type: purchase
              video_id: 574decf509838854f1000183
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete a Playlist Entitlement
      tags:
      - Playlist Entitlements
      operationId: ConsumersPlaylistsByConsumerIdAndIdDelete
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of the consumer whose video entitlements will be retrieved
      - name: id
        in: path
        required: true
        type: string
        description: ID of the playlist entitlement
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /consumers/5a0474c6aff38b1df4000036/playlists/574decf509838854f1000183
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete a Playlist Entitlement1
        x-testDescription: Testcase for testing endpoint Delete a Playlist Entitlement
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /playlists/{id}/entitled:
    get:
      description: ''
      summary: Check Entitlement
      tags:
      - Playlist Entitlements
      operationId: PlaylistsEntitledByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the playlist entitlement
      - name: access_token
        in: query
        required: true
        type: string
        description: OAuth token of a consumer
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/CheckEntitlementResponse'
          examples:
            application/json:
              message: entitled
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /subscriptions:
    get:
      description: ''
      summary: List Subscriptions
      tags:
      - Subscriptions
      operationId: SubscriptionsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: plan_id
        in: query
        required: false
        type: string
        description: ID of Plan
      - name: braintree_id
        in: query
        required: false
        type: string
        description: Filter by the consumer's Braintree ID
      - name: stripe_id
        in: query
        required: false
        type: string
        description: Filter by the consumer's Stripe ID
      - name: consumer_id
        in: query
        required: false
        type: string
        description: ID of consumer
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/SubscriptionMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Subscriptions
      tags:
      - Subscriptions
      operationId: SubscriptionsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/SubscriptionRequest'
      - name: created_at
        in: query
        required: false
        type: string
        description: ''
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: plan_id
        in: query
        required: false
        type: string
        description: ''
      - name: braintree_id
        in: query
        required: false
        type: string
        description: ''
      - name: stripe_id
        in: query
        required: false
        type: string
        description: ''
      - name: consumer_id
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/SubscriptionMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /subscriptions/{id}:
    get:
      description: ''
      summary: View Subscription
      tags:
      - Subscriptions
      operationId: SubscriptionsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the subscription
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/SubscriptionMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Subscription
      tags:
      - Subscriptions
      operationId: SubscriptionsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the subscription
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/SubscriptionRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/SubscriptionMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Subscription
      tags:
      - Subscriptions
      operationId: SubscriptionsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the subscription
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /subscriptions/5a09c873f716e4000100003e
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Subscription1
        x-testDescription: Testcase for testing endpoint Delete Subscription
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /plans:
    get:
      description: ''
      summary: List Plans
      tags:
      - Plans
      operationId: PlansGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=5992f328ce593000ef000008`
              + use `id!=5992f328ce593000ef000008` to exclude by id
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlanMetadata'
          examples:
            application/json:
              id: 544813e74c616e0dc0000000
              active: true
              amount: 7.99
              created_at: '"2017-10-22T20:30:31.792Z"'
              currency: USD
              description: Description for the plan
              interval: month
              name: Zype Monthly Subscription
              stripe_id: zype
              stripe_public_key: pk_test_123456
              trial_period_days: 0
              updated_at: null
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /plans/{id}:
    get:
      description: ''
      summary: View Plan
      tags:
      - Plans
      operationId: PlansByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/PlanMetadata'
          examples:
            application/json:
              id: 544813e74c616e0dc0000000
              active: true
              amount: 7.99
              created_at: '"2017-10-22T20:30:31.792Z"'
              currency: USD
              description: Description for the plan
              interval: month
              name: Zype Monthly Subscription
              stripe_id: zype
              stripe_public_key: pk_test_123456
              trial_period_days: 0
              updated_at: null
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /transactions:
    get:
      description: ''
      summary: List Transactions
      tags:
      - Transactions
      operationId: TransactionsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=59b2ffaac8a589000100001b`
              + use `id!=59b2ffaac8a589000100001b` to exclude by ID
      - name: consumer_id
        in: query
        required: false
        type: string
        description: ID of consumer
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/TransactionMetadata'
          examples:
            application/json:
              id: 59b2ffaac8a589000100001b
              created_at: '"2017-09-08T20:38:02.944+00:00"'
              expires_at: null
              site_id: 593966bf4c209f0046000000
              status: paid
              'stripe_id: ch_1AztEoChyLVkXdp8yRoQlZ5e': ''
              updated_at: null
              amount: 10.0
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Transactions
      tags:
      - Transactions
      operationId: TransactionsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/TransactionRequest'
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: consumer_id
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/TransactionMetadata'
          examples:
            application/json:
              id: 59b2ffaac8a589000100001b
              created_at: '"2017-09-08T20:38:02.944+00:00"'
              expires_at: null
              site_id: 593966bf4c209f0046000000
              status: paid
              'stripe_id: ch_1AztEoChyLVkXdp8yRoQlZ5e': ''
              updated_at: null
              amount: 10.0
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /transactions/{id}:
    get:
      description: ''
      summary: View Transaction
      tags:
      - Transactions
      operationId: TransactionsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the subscription
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/TransactionMetadata'
          examples:
            application/json:
              id: 59b2ffaac8a589000100001b
              created_at: '"2017-09-08T20:38:02.944+00:00"'
              expires_at: null
              site_id: 593966bf4c209f0046000000
              status: paid
              'stripe_id: ch_1AztEoChyLVkXdp8yRoQlZ5e': ''
              updated_at: null
              amount: 10.0
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Transaction
      tags:
      - Transactions
      operationId: TransactionsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the subscription
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/TransactionRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/TransactionMetadata'
          examples:
            application/json:
              id: 59b2ffaac8a589000100001b
              created_at: '"2017-09-08T20:38:02.944+00:00"'
              expires_at: null
              site_id: 593966bf4c209f0046000000
              status: paid
              'stripe_id: ch_1AztEoChyLVkXdp8yRoQlZ5e': ''
              updated_at: null
              amount: 10.0
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Transaction
      tags:
      - Transactions
      operationId: TransactionsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the subscription
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /transactions/5a09c873f716e4000100003e
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Transaction1
        x-testDescription: Testcase for testing endpoint Delete Transaction
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /redemption_codes:
    get:
      description: ''
      summary: List Redemption Codes
      tags:
      - Redemption Codes
      operationId: RedemptionCodesGet
      produces:
      - application/json
      parameters:
      - name: code
        in: query
        required: true
        type: string
        description: Filter by code
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=59b2ffaac8a589000100001b`
              + use `id!=59b2ffaac8a589000100001b` to exclude by ID
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: updated_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: expiration_date
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: redeemed_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: pass_plan_id
        in: query
        required: false
        type: string
        description: Filter records by a pass plan ID
      - name: plan_id
        in: query
        required: false
        type: string
        description: Filter records by plan ID
      - name: playlist_id
        in: query
        required: false
        type: string
        description: Filter records by playlist ID
      - name: transaction_id
        in: query
        required: false
        type: string
        description: Filter records by transaction ID
      - name: video_id
        in: query
        required: false
        type: string
        description: Filter records by video ID
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      - name: api_key
        in: query
        required: false
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RedemptionCodeMetadata'
          examples:
            application/json:
              _id: 57165ffff283475d1e000002
              content_title: Title of content
              content_type: video
              created_at: '"2016-04-19T16:42:39.369+00:00"'
              redeemed_at: null
              site_id: 5468fd6569702d17ee500000
              updated_at: '"2016-04-19T16:42:39.369+00:00"'
              nice_code: RQMJ
              available: true
              redeemed: false
              expired: false
              code: RQMJQJB5JX5V6JQ5
              expiration_date: null
              video_id: 570dabc8f28347ccfc02e939
              pass_plan_id: null
              plan_id: null
              playlist_id: null
              transaction_id: null
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Redemption Codes
      tags:
      - Redemption Codes
      operationId: RedemptionCodesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/RedemptionCodeRequest'
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: api_key
        in: query
        required: false
        type: string
        description: ''
      - name: code
        in: query
        required: false
        type: string
        description: ''
      - name: created_at
        in: query
        required: false
        type: string
        description: ''
      - name: expiration_date
        in: query
        required: false
        type: string
        description: ''
      - name: pass_plan_id
        in: query
        required: false
        type: string
        description: ''
      - name: plan_id
        in: query
        required: false
        type: string
        description: ''
      - name: playlist_id
        in: query
        required: false
        type: string
        description: ''
      - name: redeemed_at
        in: query
        required: false
        type: string
        description: ''
      - name: transaction_id
        in: query
        required: false
        type: string
        description: ''
      - name: updated_at
        in: query
        required: false
        type: string
        description: ''
      - name: video_id
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/RedemptionCodeMetadata'
          examples:
            application/json:
              _id: 57165ffff283475d1e000002
              content_title: Title of content
              content_type: video
              created_at: '"2016-04-19T16:42:39.369+00:00"'
              redeemed_at: null
              site_id: 5468fd6569702d17ee500000
              updated_at: '"2016-04-19T16:42:39.369+00:00"'
              nice_code: RQMJ
              available: true
              redeemed: false
              expired: false
              code: RQMJQJB5JX5V6JQ5
              expiration_date: null
              video_id: 570dabc8f28347ccfc02e939
              pass_plan_id: null
              plan_id: null
              playlist_id: null
              transaction_id: null
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /redemption_codes/{id}:
    get:
      description: ''
      summary: View Redemption Code
      tags:
      - Redemption Codes
      operationId: RedemptionCodesByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the redemption code
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RedemptionCodeMetadata'
          examples:
            application/json:
              _id: 57165ffff283475d1e000002
              content_title: Title of content
              content_type: video
              created_at: '"2016-04-19T16:42:39.369+00:00"'
              redeemed_at: null
              site_id: 5468fd6569702d17ee500000
              updated_at: '"2016-04-19T16:42:39.369+00:00"'
              nice_code: RQMJ
              available: true
              redeemed: false
              expired: false
              code: RQMJQJB5JX5V6JQ5
              expiration_date: null
              video_id: 570dabc8f28347ccfc02e939
              pass_plan_id: null
              plan_id: null
              playlist_id: null
              transaction_id: null
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Redemption Code
      tags:
      - Redemption Codes
      operationId: RedemptionCodesByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the redemption code
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/RedemptionCodeRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RedemptionCodeMetadata'
          examples:
            application/json:
              _id: 57165ffff283475d1e000002
              content_title: Title of content
              content_type: video
              created_at: '"2016-04-19T16:42:39.369+00:00"'
              redeemed_at: null
              site_id: 5468fd6569702d17ee500000
              updated_at: '"2016-04-19T16:42:39.369+00:00"'
              nice_code: RQMJ
              available: true
              redeemed: false
              expired: false
              code: RQMJQJB5JX5V6JQ5
              expiration_date: null
              video_id: 570dabc8f28347ccfc02e939
              pass_plan_id: null
              plan_id: null
              playlist_id: null
              transaction_id: null
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Redemption Code
      tags:
      - Redemption Codes
      operationId: RedemptionCodesByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the redemption code
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /redemption_codes/5a09c873f716e4000100003e
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Redemption Code1
        x-testDescription: Testcase for testing endpoint Delete Redemption Code
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /ad_tags:
    get:
      description: ''
      summary: List Ad Tags
      tags:
      - Ad Tags
      operationId: AdTagsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=5628f9354d656c46285b0000`
              + use `id!=5628f9354d656c46285b0000` to exclude by ID
      - name: active
        in: query
        required: false
        type: string
        description: 'Filter by active, inactive, or all records (Example: true)'
      - name: name
        in: query
        required: false
        type: string
        description: Filter by name
      - name: disabled
        in: query
        required: false
        type: string
        description: Filter by disabled
      - name: scope
        in: query
        required: false
        type: string
        description: "Filter by assigned scope: Options are 'library' or 'video'"
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/AdTagMetadata'
          examples:
            application/json:
              _id: 5628f9354d656c46285b0000
              created_at: '"2015-10-22T14:56:53.896+00:00"'
              site_id: 593031674d740d01cd000000
              name: Ad Tag Name
              active: true
              network_key: null
              device_category_id: 3940293kf9d9s0d93049c930
              device_id: 5628f99f4d656c46285c0000
              disabled: false
              interval_count: ''
              interval_seconds: 0
              revenue_partner_id: 5930325c7cebb20023001a0a
              scope: library
              tag: https://spotxchange.com
              vmap: false
              _type: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Ad Tags
      tags:
      - Ad Tags
      operationId: AdTagsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AdTagRequest'
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: active
        in: query
        required: false
        type: string
        description: ''
      - name: name
        in: query
        required: false
        type: string
        description: ''
      - name: disabled
        in: query
        required: false
        type: string
        description: ''
      - name: scope
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/AdTagMetadata'
          examples:
            application/json:
              _id: 5628f9354d656c46285b0000
              created_at: '"2015-10-22T14:56:53.896+00:00"'
              site_id: 593031674d740d01cd000000
              name: Ad Tag Name
              active: true
              network_key: null
              device_category_id: 3940293kf9d9s0d93049c930
              device_id: 5628f99f4d656c46285c0000
              disabled: false
              interval_count: ''
              interval_seconds: 0
              revenue_partner_id: 5930325c7cebb20023001a0a
              scope: library
              tag: https://spotxchange.com
              vmap: false
              _type: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /ad_tags/{id}:
    get:
      description: ''
      summary: View Ad Tag
      tags:
      - Ad Tags
      operationId: AdTagsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the ad tag
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/AdTagMetadata'
          examples:
            application/json:
              _id: 5628f9354d656c46285b0000
              created_at: '"2015-10-22T14:56:53.896+00:00"'
              site_id: 593031674d740d01cd000000
              name: Ad Tag Name
              active: true
              network_key: null
              device_category_id: 3940293kf9d9s0d93049c930
              device_id: 5628f99f4d656c46285c0000
              disabled: false
              interval_count: ''
              interval_seconds: 0
              revenue_partner_id: 5930325c7cebb20023001a0a
              scope: library
              tag: https://spotxchange.com
              vmap: false
              _type: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Ad Tag
      tags:
      - Ad Tags
      operationId: AdTagsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the ad tag
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AdTagRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/AdTagMetadata'
          examples:
            application/json:
              _id: 5628f9354d656c46285b0000
              created_at: '"2015-10-22T14:56:53.896+00:00"'
              site_id: 593031674d740d01cd000000
              name: Ad Tag Name
              active: true
              network_key: null
              device_category_id: 3940293kf9d9s0d93049c930
              device_id: 5628f99f4d656c46285c0000
              disabled: false
              interval_count: ''
              interval_seconds: 0
              revenue_partner_id: 5930325c7cebb20023001a0a
              scope: library
              tag: https://spotxchange.com
              vmap: false
              _type: ''
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Ad Tag
      tags:
      - Ad Tags
      operationId: AdTagsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the ad tag
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /ad_tags/5628f9354d656c46285b0000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Ad Tag1
        x-testDescription: Testcase for testing endpoint Delete Ad Tag
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /revenue_models:
    get:
      description: ''
      summary: List Revenue Models
      tags:
      - Revenue Models
      operationId: RevenueModelsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=5429b1c369702d2f7c040000`
              + use `id!=5429b1c369702d2f7c040000` to exclude by ID
      - name: created_at
        in: query
        required: false
        type: string
        format: date
        description: >-
          Filter by created at date using times in ISO8601 format

          Note: Range filters can be applied by adding a suffix: ‘.gt’, ‘.gte’, ‘.lt’, ‘lte’ (Example: expires_at.gte)

          + Examples
              + `2017-01-01T00:00:00-00:00` - in ISO8601 format
              + `1483228800` - Unix timestamps
      - name: title
        in: query
        required: false
        type: string
        description: Filter records by title
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RevenueModelMetadata'
          examples:
            application/json:
              _id: 5429b1c369702d2f7c040000
              created_at: 2014-09-29T19:23:47.3020000+00:00
              image_content_type: image/png
              image_file_name: desktop.png
              image_file_size: 19347
              image_fingerprint: a661d27f5003bcf1523f75e3686f6b24
              image_updated_at: 2014-09-29T19:23:47.0990000+00:00
              name: Desktop
              updated_at: 2014-09-29T19:23:47.3020000+00:00
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /revenue_models/{id}:
    get:
      description: ''
      summary: View Revenue Model
      tags:
      - Revenue Models
      operationId: RevenueModelsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the revenue model
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RevenueModelMetadata'
          examples:
            application/json:
              _id: 5429b1c369702d2f7c040000
              created_at: 2014-09-29T19:23:47.3020000+00:00
              image_content_type: image/png
              image_file_name: desktop.png
              image_file_size: 19347
              image_fingerprint: a661d27f5003bcf1523f75e3686f6b24
              image_updated_at: 2014-09-29T19:23:47.0990000+00:00
              name: Desktop
              updated_at: 2014-09-29T19:23:47.3020000+00:00
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{consumer_id}/video_favorites:
    get:
      description: ''
      summary: List Video Favorites
      tags:
      - Video Favorites
      operationId: ConsumersVideoFavoritesByConsumerIdGet
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of consumer
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/VideoFavoriteMetadata'
          examples:
            application/json:
              _id: 57cbb1231c4f960kj2015812
              consumer_id: 57cbg120e43f9aa981018199
              created_at: '"2016-09-04T05:26:59.48+00:00"'
              updated_at: null
              video_id: 56d7594a8f7aca08aabbc8e3
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Video Favorite
      tags:
      - Video Favorites
      operationId: ConsumersVideoFavoritesByConsumerIdPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/VideoFavoriteRequest'
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/VideoFavoriteMetadata'
          examples:
            application/json:
              _id: 57cbb1231c4f960kj2015812
              consumer_id: 57cbg120e43f9aa981018199
              created_at: '"2016-09-04T05:26:59.48+00:00"'
              updated_at: null
              video_id: 56d7594a8f7aca08aabbc8e3
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /consumers/{consumer_id}/video_favorites/{video_id}:
    delete:
      description: ''
      summary: Delete Video Favorite
      tags:
      - Video Favorites
      operationId: ConsumersVideoFavoritesByConsumerIdAndVideoIdDelete
      produces:
      - application/json
      parameters:
      - name: consumer_id
        in: path
        required: true
        type: string
        description: ID of consumer
      - name: video_id
        in: path
        required: true
        type: string
        description: ID of video
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /consumers/5466584169702d4d300d0000/video_favorites/56d7594a8f7aca08aabbc8e3
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Video Favorite1
        x-testDescription: Testcase for testing endpoint Delete Video Favorite
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /zobject_types:
    get:
      description: ''
      summary: List Zobject Types
      tags:
      - Zobject Types
      operationId: ZobjectTypesGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=597a5f18841b2c0001000000`
              + use `id!=597a5f18841b2c0001000000` to exclude by ID
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectTypeMetadata'
          examples:
            application/json:
              _id: 546cd8124c616e043d010000
              created_at: '"2014-11-19T17:49:06.385+00:00"'
              site_id: 545932274c616e2359000000
              updated_at: '"2014-11-19T17:49:06.385+00:00"'
              zobject_count: 2
              description: Thumbnails for videos
              title: Type Title
              videos_enabled: true
              zobject_attributes:
                _id: 597a5f18841b2c0001000001
                created_at: '"2017-07-27T21:46:00.836+00:00"'
                updated_at: null
                description: Thumbnail
                field_name: picture
                field_type: String
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Zobject Type
      tags:
      - Zobject Types
      operationId: ZobjectTypesPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ZobjectTypeRequest'
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectTypeMetadata'
          examples:
            application/json:
              _id: 546cd8124c616e043d010000
              created_at: '"2014-11-19T17:49:06.385+00:00"'
              site_id: 545932274c616e2359000000
              updated_at: '"2014-11-19T17:49:06.385+00:00"'
              zobject_count: 2
              description: Thumbnails for videos
              title: Type Title
              videos_enabled: true
              zobject_attributes:
                _id: 597a5f18841b2c0001000001
                created_at: '"2017-07-27T21:46:00.836+00:00"'
                updated_at: null
                description: Thumbnail
                field_name: picture
                field_type: String
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /zobject_types/{id}:
    get:
      description: ''
      summary: Retrieve Zobject Type
      tags:
      - Zobject Types
      operationId: ZobjectTypesByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectTypeMetadata'
          examples:
            application/json:
              _id: 546cd8124c616e043d010000
              created_at: '"2014-11-19T17:49:06.385+00:00"'
              site_id: 545932274c616e2359000000
              updated_at: '"2014-11-19T17:49:06.385+00:00"'
              zobject_count: 2
              description: Thumbnails for videos
              title: Type Title
              videos_enabled: true
              zobject_attributes:
                _id: 597a5f18841b2c0001000001
                created_at: '"2017-07-27T21:46:00.836+00:00"'
                updated_at: null
                description: Thumbnail
                field_name: picture
                field_type: String
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Zobject Type
      tags:
      - Zobject Types
      operationId: ZobjectTypesByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ZobjectTypeRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectTypeMetadata'
          examples:
            application/json:
              _id: 546cd8124c616e043d010000
              created_at: '"2014-11-19T17:49:06.385+00:00"'
              site_id: 545932274c616e2359000000
              updated_at: '"2014-11-19T17:49:06.385+00:00"'
              zobject_count: 2
              description: Thumbnails for videos
              title: Type Title
              videos_enabled: true
              zobject_attributes:
                _id: 597a5f18841b2c0001000001
                created_at: '"2017-07-27T21:46:00.836+00:00"'
                updated_at: null
                description: Thumbnail
                field_name: picture
                field_type: String
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Zobject Type
      tags:
      - Zobject Types
      operationId: ZobjectTypesByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /zobject_types/597a5f18841b2c0001000000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Zobject Type1
        x-testDescription: Testcase for testing endpoint Delete Zobject Type
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /zobjects:
    get:
      description: ''
      summary: List Zobject Types
      tags:
      - Zobject
      operationId: ZobjectsGet
      produces:
      - application/json
      parameters:
      - name: id
        in: query
        required: false
        type: string
        description: >-
          Filter by ID

          + Examples
              + `id=549dc72d636872c09d1f0000`
              + use `id!=549dc72d636872c09d1f0000` to exclude by ID
      - name: custom
        in: query
        required: false
        type: string
        description: >-
          Filter records by custom attribues

          + Example: color=blue
      - name: q
        in: query
        required: false
        type: string
        description: Filter by keyword
      - name: order
        in: query
        required: false
        type: string
        description: >-
          Filter by ascending or descending order

          + Examples
              + asc
              + desc
      - name: sort
        in: query
        required: false
        type: string
        description: Sort on the specified field
      - name: page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of pages to return
      - name: per_page
        in: query
        required: false
        type: number
        format: double
        exclusiveMaximum: false
        exclusiveMinimum: false
        description: Number of records to return per page
      - name: zobject_type
        in: query
        required: false
        type: string
        description: ''
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: ''
      summary: Create Zobject
      tags:
      - Zobject
      operationId: ZobjectsPost
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ZobjectRequest'
      - name: id
        in: query
        required: false
        type: string
        description: ''
      - name: custom
        in: query
        required: false
        type: string
        description: ''
      - name: zobject_type
        in: query
        required: false
        type: string
        description: ''
      - name: page
        in: query
        required: false
        type: string
        description: ''
      - name: per_page
        in: query
        required: false
        type: string
        description: ''
      - name: q
        in: query
        required: false
        type: string
        description: ''
      - name: order
        in: query
        required: false
        type: string
        description: ''
      - name: sort
        in: query
        required: false
        type: string
        description: ''
      responses:
        201:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /zobjects/{id}:
    get:
      description: ''
      summary: Retrieve Zobject
      tags:
      - Zobject
      operationId: ZobjectsByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: ''
      summary: Update Zobject
      tags:
      - Zobject
      operationId: ZobjectsByIdPut
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      - name: body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/ZobjectRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ZobjectMetadata'
          examples: {}
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: ''
      summary: Delete Zobject
      tags:
      - Zobject
      operationId: ZobjectsByIdDelete
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the record
      responses:
        204:
          description: ''
      x-unitTests:
      - request:
          method: DELETE
          uri: /zobjects/549dc72d636872c09d1f0000
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers:
            Content-Type: application/json
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Delete Zobject1
        x-testDescription: Testcase for testing endpoint Delete Zobject
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  AdTag:
    title: AdTag
    type: object
    properties:
      name:
        description: ''
        example: Ad Tag Name
        type: string
      active:
        description: ''
        example: true
        type: string
      network_key:
        description: ''
        type: string
      device_category_id:
        description: ''
        example: 3940293kf9d9s0d93049c930
        type: string
      device_id:
        description: ID of device to display ad on
        example: 5628f99f4d656c46285c0000
        type: string
      disabled:
        description: ''
        example: false
        type: boolean
      interval_count:
        description: How many times a video or videos in a collection will play before a single user gets an ad
        type: string
      interval_seconds:
        description: ''
        example: 0
        type: string
      revenue_partner_id:
        description: ''
        example: 5930325c7cebb20023001a0a
        type: string
      scope:
        description: Optional. Whether interval_count applies to single video (‘video’) or a collection of videos (‘library’).
        example: library
        type: string
      tag:
        description: URL of the ad
        example: https://spotxchange.com
        type: string
      vmap:
        description: ''
        example: false
        type: string
      _type:
        description: One of “AdTag::Vast” or “AdTag::Googima”
        type: string
  AdTagMetadata:
    title: AdTagMetadata
    example:
      _id: 5628f9354d656c46285b0000
      created_at: '"2015-10-22T14:56:53.896+00:00"'
      site_id: 593031674d740d01cd000000
      name: Ad Tag Name
      active: true
      network_key: null
      device_category_id: 3940293kf9d9s0d93049c930
      device_id: 5628f99f4d656c46285c0000
      disabled: false
      interval_count: ''
      interval_seconds: 0
      revenue_partner_id: 5930325c7cebb20023001a0a
      scope: library
      tag: https://spotxchange.com
      vmap: false
      _type: ''
    type: object
    properties:
      _id:
        description: ''
        example: 5628f9354d656c46285b0000
        type: string
      created_at:
        description: ''
        example: 10/22/2015 2:56:53 PM
        type: string
      site_id:
        description: ''
        example: 593031674d740d01cd000000
        type: string
      name:
        description: ''
        example: Ad Tag Name
        type: string
      active:
        description: ''
        example: true
        type: string
      network_key:
        description: ''
        type: string
      device_category_id:
        description: ''
        example: 3940293kf9d9s0d93049c930
        type: string
      device_id:
        description: ID of device to display ad on
        example: 5628f99f4d656c46285c0000
        type: string
      disabled:
        description: ''
        example: false
        type: boolean
      interval_count:
        description: How many times a video or videos in a collection will play before a single user gets an ad
        type: string
      interval_seconds:
        description: ''
        example: 0
        type: string
      revenue_partner_id:
        description: ''
        example: 5930325c7cebb20023001a0a
        type: string
      scope:
        description: Optional. Whether interval_count applies to single video (‘video’) or a collection of videos (‘library’).
        example: library
        type: string
      tag:
        description: URL of the ad
        example: https://spotxchange.com
        type: string
      vmap:
        description: ''
        example: false
        type: string
      _type:
        description: One of “AdTag::Vast” or “AdTag::Googima”
        type: string
  AdTagRequest:
    title: AdTagRequest
    type: object
    properties:
      ad_tag:
        $ref: '#/definitions/AdTag3'
  AdTag3:
    title: ad_tag3
    type: object
    properties:
      name:
        description: ''
        example: Ad Tag Name
        type: string
      active:
        description: ''
        example: true
        type: string
      network_key:
        description: ''
        type: string
      device_category_id:
        description: ''
        example: 3940293kf9d9s0d93049c930
        type: string
      device_id:
        description: ID of device to display ad on
        example: 5628f99f4d656c46285c0000
        type: string
      disabled:
        description: ''
        example: false
        type: boolean
      interval_count:
        description: How many times a video or videos in a collection will play before a single user gets an ad
        type: string
      interval_seconds:
        description: ''
        example: 0
        type: string
      revenue_partner_id:
        description: ''
        example: 5930325c7cebb20023001a0a
        type: string
      scope:
        description: Optional. Whether interval_count applies to single video (‘video’) or a collection of videos (‘library’).
        example: library
        type: string
      tag:
        description: URL of the ad
        example: https://spotxchange.com
        type: string
      vmap:
        description: ''
        example: false
        type: string
      _type:
        description: One of “AdTag::Vast” or “AdTag::Googima”
        type: string
  App:
    title: App
    example:
      _id: 593b1ac8830ece0024000005
      active: false
      app_type_id: 1593030e94d740d00530000971
      device_ids: '[593030d64d740d0053000007]'
      site_id: 593031674d740d01cd000000
      title: Apple TV App
      version: 0.1.0
      store_icon_url: https://url
    type: object
    properties:
      _id:
        description: ID of the record
        example: 593b1ac8830ece0024000005
        type: string
      active:
        description: true
        type: boolean
      app_type_id:
        description: ID of the AppType this app belongs to (AppleTV, Android, iOS, etc)
        example: 1593030e94d740d00530000971
        type: string
      device_ids:
        description: Devices the app can play on
        example: '[593030d64d740d0053000007]'
        type: string
      site_id:
        description: Site the app belongs to
        example: 593031674d740d01cd000000
        type: string
      title:
        description: Descriptive title of the app
        example: Apple TV App
        type: string
      version:
        description: ''
        example: 0.1.0
        type: string
      store_icon_url:
        description: icon.com
        example: https://url
        type: string
  Category:
    title: Category
    type: object
    properties:
      title:
        description: Title of the category assigned to the video
        example: Sports
        type: string
      friendly_title:
        description: URL friendly title
        example: sports
        type: string
  CategoryValue:
    title: CategoryValue
    type: object
    properties:
      value:
        description: List of values you wish to add to the category. Must exist in the main Category first
        type: array
        items:
          type: string
      title:
        description: Title of the category assigned to the video
        example: Sports
        type: string
      friendly_title:
        description: URL friendly title
        example: sports
        type: string
  CategoryValues:
    title: CategoryValues
    type: object
    properties:
      values:
        description: List of values you wish to add to the category. Must exist in the main Category first
        type: array
        items:
          type: string
      title:
        description: Title of the category assigned to the video
        example: Sports
        type: string
      friendly_title:
        description: URL friendly title
        example: sports
        type: string
  CategoryMetadata:
    title: CategoryMetadata
    type: object
    properties:
      _id:
        description: ID of the category assigned to the video if you are updating its values
        example: 59553e1a805cd90024001c47
        type: string
      created_at:
        description: Timestamp category was created
        example: 6/29/2017 5:51:22 PM
        type: string
      updated_at:
        description: Timestamp of when category was last updated
        type: string
      values:
        description: List of values you wish to add to the category. Must exist in the main Category first
        type: array
        items:
          type: string
      title:
        description: Title of the category assigned to the video
        example: Sports
        type: string
      friendly_title:
        description: URL friendly title
        example: sports
        type: string
  CategoryRequest:
    title: CategoryRequest
    type: object
    properties:
      category:
        $ref: '#/definitions/Category'
  Consumer:
    title: Consumer
    type: object
    properties:
      email:
        description: ''
        example: email@example.com
        type: string
      name:
        description: ''
        example: Tony McCregor
        type: string
      sex:
        description: female
        type: string
      birthday:
        description: 1997-07-17
        type: string
      updates:
        description: If the consumer has agreed to receive updates
        example: false
        type: boolean
      terms:
        description: If consumer has agreed to the terms and services
        example: true
        type: boolean
      stripe_id:
        description: Unique ID assigned to the consumer in Stripe
        example: cus_BMcTbWrTN0mSem
        type: string
      braintree_id:
        description: Unique ID assigned to the consumer in Braintree
        example: 863820466
        type: string
      'rss_token: X0fLYNW9538DiPbqR74-6gMnTjmbpuFrShP-NeEgZtOKgzXQktZ0KJtqvOPCY_w_':
        description: Unique token to identify a customer accessing your RSS feed
        type: string
      password_token:
        description: The password token to use during password reset workflows
        type: string
      remember_token:
        description: The password token to use during remember login workflows
        type: string
  ConsumerMetadata:
    title: ConsumerMetadata
    type: object
    properties:
      _id:
        description: ''
        example: 596d08cc75e3bf0039000001
        type: string
      created_at:
        description: 07-17T14:58:20.109-04:00
        example: 2017
        type: string
      updated_at:
        description: ''
        type: string
      amazon_user_id:
        description: Unique ID to identify a consumer by Amazon Fire
        type: string
      pass_count 3:
        description: Number of passes a consumer has
        type: number
        format: double
      site_id:
        description: ''
        example: 59b2ff9dc8a6890001000019
        type: string
      subscription_count 1:
        description: Number of subscriptions a consumer has
        type: number
        format: double
      transaction_count 3:
        description: Number of transactions a consumer has
        type: number
        format: double
      video_count 40:
        description: Number of videos a consumer has access to
        type: number
        format: double
      linked_devices:
        description: IDs of Devices a user uses to watch your videos
        type: object
      email:
        description: ''
        example: email@example.com
        type: string
      name:
        description: ''
        example: Tony McCregor
        type: string
      sex:
        description: female
        type: string
      birthday:
        description: 1997-07-17
        type: string
      updates:
        description: If the consumer has agreed to receive updates
        example: false
        type: boolean
      terms:
        description: If consumer has agreed to the terms and services
        example: true
        type: boolean
      stripe_id:
        description: Unique ID assigned to the consumer in Stripe
        example: cus_BMcTbWrTN0mSem
        type: string
      braintree_id:
        description: Unique ID assigned to the consumer in Braintree
        example: 863820466
        type: string
      'rss_token: X0fLYNW9538DiPbqR74-6gMnTjmbpuFrShP-NeEgZtOKgzXQktZ0KJtqvOPCY_w_':
        description: Unique token to identify a customer accessing your RSS feed
        type: string
      password_token:
        description: The password token to use during password reset workflows
        type: string
      remember_token:
        description: The password token to use during remember login workflows
        type: string
  ConsumerRequest:
    title: ConsumerRequest
    type: object
    properties:
      consumer:
        $ref: '#/definitions/Consumer'
  ContentRule:
    title: ContentRule
    type: object
    properties:
      enabled:
        description: ''
        example: true
        type: boolean
      geographies:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Geography'
      name:
        description: ''
        example: My new content rule
        type: string
      policy:
        description: ''
        example: deny
        type: string
      priority:
        description: ''
        example: 1
        type: string
      stackable:
        description: ''
        example: true
        type: string
  Geography:
    title: Geography
    type: object
    properties:
      _id:
        description: ''
        example: 577529daf28347088700000a
        type: string
      countries:
        description: List of countries supplied by you
        type: object
  ContentRuleMetadata:
    title: ContentRuleMetadata
    type: object
    properties:
      _id:
        description: ''
        example: 577528faf283470887000009
        type: string
      created_at:
        description: 06-30T10:13:14.555-04:00
        example: 2017
        type: string
      updated_at:
        description: ''
        type: string
      enabled:
        description: ''
        example: true
        type: boolean
      geographies:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Geography'
      name:
        description: ''
        example: My new content rule
        type: string
      policy:
        description: ''
        example: deny
        type: string
      priority:
        description: ''
        example: 1
        type: string
      stackable:
        description: ''
        example: true
        type: string
  ContentRuleRequest:
    title: ContentRuleRequest
    type: object
    properties:
      content_rule:
        $ref: '#/definitions/ContentRule19'
  ContentRule19:
    title: content_rule19
    type: object
    properties:
      enabled:
        description: ''
        example: true
        type: boolean
      geographies:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Geography'
      name:
        description: ''
        example: My new content rule
        type: string
      policy:
        description: ''
        example: deny
        type: string
      priority:
        description: ''
        example: 1
        type: string
      stackable:
        description: ''
        example: true
        type: string
  Device:
    title: Device
    example:
      _id: 593030d64d740d0053000007
      description: Accessed via desktop HTML5 web browser
      name: Desktop
    type: object
    properties:
      _id:
        description: ID of the device
        example: 593030d64d740d0053000007
        type: string
      description:
        description: ''
        example: Accessed via desktop HTML5 web browser
        type: string
      name:
        description: ''
        example: Desktop
        type: string
  DeviceCategory:
    title: DeviceCategory
    type: object
    properties:
      _id:
        description: ''
        example: 593030d54d740d0053000004
        type: string
      _keywords:
        description: ''
        type: array
        items:
          type: string
      created_at:
        description: ''
        example: 6/1/2017 3:20:53 PM
        type: string
      image_content_type:
        description: ''
        example: image/png
        type: string
      image_file_name:
        description: ''
        example: desktop.png
        type: string
      image_file_size:
        description: ''
        example: 19347
        type: string
      image_fingerprint:
        description: ''
        example: a661d27f5003bcf1523f75e3686f6b24
        type: string
      image_updated_at:
        description: ''
        example: 6/1/2017 3:20:53 PM
        type: string
      name:
        description: ''
        example: Web
        type: string
      updated_at:
        description: ''
        type: string
  DevicePin:
    title: DevicePin
    example:
      _id: 57113fc6f283474159000003
      consumer_id: 5466584169702d4d300d0001
      created_at: '"2017-02-13T11:28:08.352+00:00"'
      deleted_at: null
      linked_device_id: uniqueDeviceID
      pin: ztwp746
      pin_expiration: 2018
      updated_at: null
      linked true: false
      subscription_count: 1
    type: object
    properties:
      _id:
        description: ''
        example: 57113fc6f283474159000003
        type: string
      consumer_id:
        description: ''
        example: 5466584169702d4d300d0001
        type: string
      created_at:
        description: ''
        example: 2/13/2017 11:28:08 AM
        type: string
      deleted_at:
        description: ''
        type: string
      linked_device_id:
        description: ''
        example: uniqueDeviceID
        type: string
      pin:
        description: ''
        example: ztwp746
        type: string
      pin_expiration:
        description: 02-13T07:27:00.113-05:00
        example: 2018
        type: string
      updated_at:
        description: ''
        type: string
      linked true:
        description: ''
        type: boolean
      subscription_count:
        description: ''
        example: 1
        type: number
        format: double
  EmbeddedCategory:
    title: EmbeddedCategory
    type: object
    properties:
      category_id:
        description: ID of the main Category you wish to add to the video
        example: 5955293d805cd90024000000
        type: string
      value:
        description: List of values you wish to add to the category. Must exist in the main Category first
        type: array
        items:
          type: string
      title:
        description: Title of the category assigned to the video
        example: Sports
        type: string
      friendly_title:
        description: URL friendly title
        example: sports
        type: string
  File24:
    title: File24
    type: object
    properties:
      _id:
        description: ''
        example: 5984c3e81af1730023000a1b
        type: string
      height:
        description: ''
        example: 360
        type: number
        format: double
      width:
        description: ''
        example: 640
        type: number
        format: double
      quality:
        description: ''
        example: sd
        type: string
      url:
        description: ''
        example: http://player.vimeo.com/external/394029304.sd.mp4
        type: string
  Image:
    title: Image
    type: object
    properties:
      _id:
        description: ID of the image
        example: 59921049ce593000ef000002
        type: string
      caption:
        description: Caption of the image
        example: Image Caption
        type: string
      title:
        description: Title of the image
        example: Image Title
        type: string
      updated_at:
        description: Timestamp the image was updated
        example: 8/14/2017 9:04:11 PM
        type: string
      url:
        description: URL where the image is hosted
        example: https://image-host.com
        type: string
  OAuth:
    title: OAuth
    example:
      access_token: 35fc9daad3363fe137e0dfb384246f982548a8a749b997ecb451080c35c22485
      token_type: bearer
      expires_in: 604800
      refresh_token: e90fd4862b5f85868dd97b2f13fbc103af3b8586c34f51acd60266fa3ca91daf
      scope: consumer
      created_at: 1504651738
    type: object
    properties:
      access_token:
        description: ''
        example: 35fc9daad3363fe137e0dfb384246f982548a8a749b997ecb451080c35c22485
        type: string
      token_type:
        description: ''
        example: bearer
        type: string
      expires_in:
        description: ''
        example: 604800
        type: number
        format: double
      refresh_token:
        description: ''
        example: e90fd4862b5f85868dd97b2f13fbc103af3b8586c34f51acd60266fa3ca91daf
        type: string
      scope:
        description: ''
        example: consumer
        type: string
      created_at:
        description: ''
        example: 1504651738
        type: number
        format: double
  OAuthRequest:
    title: OAuthRequest
    type: object
    properties:
      client_id:
        description: The client ID for your Zype application
        example: 670086c54af8e1e3a57b33b424d889a7939a5365
        type: string
      client_secret:
        description: The client secret for your Zype application
        example: 8fedb0d8706cn85f40760b81637063f4d4bd9e612c5
        type: string
      username:
        description: The username (email) of the consumer
        type: string
      password:
        description: Password of the consumer. Password is required if username is used to authenticate.
        type: string
      linked_device_id:
        description: The linked device ID of the consumer. Required if using username to authenticate.
        type: string
      pin:
        description: The pin for the linked device. Pin is required if linked device ID is used to authenticate.
        type: string
      grant_type:
        description: Use ‘password’. Required if using linked device ID to authenticate.
        type: string
  OAuthRefreshRequest:
    title: OAuthRefreshRequest
    type: object
    properties:
      client_id:
        description: The client ID for your Zype application
        example: 670086c54af8e1e3a57b33b424d889a7939a5365
        type: string
      client_secret:
        description: The client secret for your Zype application
        example: 8fedb0d8706cn85f40760b81637063f4d4bd9e612c5
        type: string
      refresh_token:
        description: Token to use to refresh
        example: 594adacf230981e4e87120efb2b6bf70ad5278c53bdca781fc9619f9507c
        type: string
      grant_type:
        description: Use `refresh_token`. Required for access token refresh.
        example: refresh_token
        type: string
  OAuthStatus:
    title: OAuthStatus
    example:
      resource_owner_id: 5a032827aff38bb160000001
      scopes:
      - consumer
      expires_in_seconds: 604600
      application:
        uid: 3f3fc04fa3656113f95665cce3c2453fe8cd64eed24c949a2ce232662528d95
      created_at: 1510156376
    type: object
    properties:
      resource_owner_id:
        description: ''
        example: 5a032827aff38bb160000001
        type: string
      scopes:
        description: ''
        type: array
        items:
          type: string
      expires_in_seconds:
        description: ''
        example: 604600
        type: number
        format: double
      application:
        $ref: '#/definitions/Application'
      created_at:
        description: ''
        example: 1510156376
        type: number
        format: double
  Application:
    title: application
    type: object
    properties:
      uid:
        description: ''
        example: 3f3fc04fa3656113f95665cce3c2453fe8cd64eed24c949a2ce232662528d95
        type: string
  PlanMetadata:
    title: PlanMetadata
    example:
      id: 544813e74c616e0dc0000000
      active: true
      amount: 7.99
      created_at: '"2017-10-22T20:30:31.792Z"'
      currency: USD
      description: Description for the plan
      interval: month
      name: Zype Monthly Subscription
      stripe_id: zype
      stripe_public_key: pk_test_123456
      trial_period_days: 0
      updated_at: null
    type: object
    properties:
      id:
        description: ''
        example: 544813e74c616e0dc0000000
        type: string
      active:
        description: ''
        example: true
        type: string
      amount:
        description: ''
        example: 7.99
        type: string
      created_at:
        description: ''
        example: 10/22/2017 8:30:31 PM
        type: string
      currency:
        description: ''
        example: USD
        type: string
      description:
        description: ''
        example: Description for the plan
        type: string
      interval:
        description: ''
        example: month
        type: string
      name:
        description: ''
        example: Zype Monthly Subscription
        type: string
      stripe_id:
        description: monthly
        example: zype
        type: string
      stripe_public_key:
        description: ''
        example: pk_test_123456
        type: string
      trial_period_days:
        description: ''
        example: 0
        type: string
      updated_at:
        description: ''
        type: string
  Playlist:
    title: Playlist
    type: object
    properties:
      active:
        description: Whether or not the playlist is active true
        type: boolean
      auto_remove_video_entitlements:
        description: Automatically remove a customer's entitlement to view a video if it is removed from the playlist
        type: boolean
      auto_update_video_entitlements:
        description: Automatically update a customer's entitlement to view a video if it is added to the playlist
        type: boolean
      description:
        description: Description of the playlist
        example: Example of a description
        type: string
      friendly_title:
        description: The URL friendly title of the playlist
        example: example-friendly-title-url
        type: string
      title:
        description: Title of the playlist
        example: Example Title
        type: string
      playlist_type:
        description: >-
          Determine if videos will automatically be added to this playlist based off the category values assigned to them. If you would like this feature, set to 'category', otherwise, set to 'manual' to disable. If enabled, you may not manually add videos to this playlist. Options are:

          - manual

          - category
        type: string
      match_type:
        description: >-
          Used to specify matching categories to a playlist by ALL category values or ANY category values

          - any

          - all
        type: string
      parent_id:
        description: The parent playlist id. If this value is null, the playlist is a root playlist and can be used as the primary playlist within an app where all your other playlists and videos are nested under
        type: string
      priority:
        description: The priority of the playlist related with its siblings. Playlists are ordered ascending by priority value
        type: number
        format: double
      purchase_price:
        description: Amount to purchase the playlist bundle
        type: number
        format: double
      purchase_required:
        description: Whether or not the playlist must be purchased
        type: boolean
      rental_duration:
        description: Number of days a playlist bundle can be rented
        type: number
        format: double
      rental_price:
        description: Price to rent the playlist bundle
        type: number
        format: double
      rental_required:
        description: Whether or not the playlist bundle must be rented
        type: boolean
      thumnbail_layout:
        description: >-
          Orientation of the playlist thumbnail

          Layout must be one of:
              + landscape
              + poster
              + square
        example: landscape
        type: string
      site_id:
        description: Site the playlist is related to
        example: 593031674d740d01cd000000
        type: string
      video_ids:
        description: IDs of videos that are associated with Playlist
        type: object
      images:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Image'
      categories:
        description: ''
        type: array
        items:
          $ref: '#/definitions/EmbeddedCategory'
      sort_options:
        description: ''
        type: array
        items:
          $ref: '#/definitions/SortOption'
  SortOption:
    title: SortOption
    type: object
    properties:
      'sort_by: created_at':
        description: >-
          What value to sort the associated playlist by

          Must be one of:

          + created_at

          + published_at

          + title
        type: string
      direction:
        description: >-
          Which direction to sort the associated playlist by

          Must be one of:

          + desc

          + asc
        example: desc
        type: string
      sort_by_type:
        description: >-
          What datatype to sorty the associated playlist by

          Must be one of:

          + date

          + datetime

          + string

          + integer

          + array

          + boolean
        example: string
        type: string
  PlaylistEntitlement:
    title: PlaylistEntitlement
    type: object
    properties:
      expires_at:
        description: ''
        type: string
      transaction_id:
        description: ''
        example: 57214ac2098388d3a800000c
        type: string
      transaction_type:
        description: ''
        example: purchase
        type: string
      video_id:
        description: ''
        example: 574decf509838854f1000183
        type: string
  PlaylistEntitlementMetadata:
    title: PlaylistEntitlementMetadata
    example:
      _id: 574decf509838854f1000183
      consumer_id: 5543e4a269702d070d330600
      created_at: '"2017-05-31T20:13:05.437+00:00"'
      updated_at: null
      video_title: Sample Video
      expires_at: null
      transaction_id: 57214ac2098388d3a800000c
      transaction_type: purchase
      video_id: 574decf509838854f1000183
    type: object
    properties:
      _id:
        description: ''
        example: 574decf509838854f1000183
        type: string
      consumer_id:
        description: ''
        example: 5543e4a269702d070d330600
        type: string
      created_at:
        description: ''
        example: 5/31/2017 8:13:05 PM
        type: string
      updated_at:
        description: ''
        type: string
      video_title:
        description: ''
        example: Sample Video
        type: string
      expires_at:
        description: ''
        type: string
      transaction_id:
        description: ''
        example: 57214ac2098388d3a800000c
        type: string
      transaction_type:
        description: ''
        example: purchase
        type: string
      video_id:
        description: ''
        example: 574decf509838854f1000183
        type: string
  PlaylistEntitlementRequest:
    title: PlaylistEntitlementRequest
    type: object
    properties:
      entitlement:
        $ref: '#/definitions/Entitlement'
  Entitlement:
    title: entitlement
    type: object
    properties:
      expires_at:
        description: ''
        type: string
      transaction_id:
        description: ''
        example: 57214ac2098388d3a800000c
        type: string
      transaction_type:
        description: ''
        example: purchase
        type: string
      video_id:
        description: ''
        example: 574decf509838854f1000183
        type: string
  PlaylistMetadata:
    title: PlaylistMetadata
    type: object
    properties:
      _id:
        description: ID of the record
        example: 5967e4421621dc1361017d43
        type: string
      _keywords:
        description: Keywords for a playlist
        type: array
        items:
          type: string
      created_at:
        description: Timestamp playlist was created
        example: 7/13/2017 9:21:06 PM
        type: string
      deleted_at:
        description: Timestamp playlist was deleted
        type: string
      updated_at:
        description: Timestamp of when video was last updated
        type: string
      discovery_url:
        description: URL where you playlist can be discovered
        example: https://your-site.com
        type: string
      playlist_item_count:
        description: Number of videos in a playlist
        type: number
        format: double
      thumbnails:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Thumbnail'
      active:
        description: Whether or not the playlist is active true
        type: boolean
      auto_remove_video_entitlements:
        description: Automatically remove a customer's entitlement to view a video if it is removed from the playlist
        type: boolean
      auto_update_video_entitlements:
        description: Automatically update a customer's entitlement to view a video if it is added to the playlist
        type: boolean
      description:
        description: Description of the playlist
        example: Example of a description
        type: string
      friendly_title:
        description: The URL friendly title of the playlist
        example: example-friendly-title-url
        type: string
      title:
        description: Title of the playlist
        example: Example Title
        type: string
      playlist_type:
        description: >-
          Determine if videos will automatically be added to this playlist based off the category values assigned to them. If you would like this feature, set to 'category', otherwise, set to 'manual' to disable. If enabled, you may not manually add videos to this playlist. Options are:

          - manual

          - category
        type: string
      match_type:
        description: >-
          Used to specify matching categories to a playlist by ALL category values or ANY category values

          - any

          - all
        type: string
      parent_id:
        description: The parent playlist id. If this value is null, the playlist is a root playlist and can be used as the primary playlist within an app where all your other playlists and videos are nested under
        type: string
      priority:
        description: The priority of the playlist related with its siblings. Playlists are ordered ascending by priority value
        type: number
        format: double
      purchase_price:
        description: Amount to purchase the playlist bundle
        type: number
        format: double
      purchase_required:
        description: Whether or not the playlist must be purchased
        type: boolean
      rental_duration:
        description: Number of days a playlist bundle can be rented
        type: number
        format: double
      rental_price:
        description: Price to rent the playlist bundle
        type: number
        format: double
      rental_required:
        description: Whether or not the playlist bundle must be rented
        type: boolean
      thumnbail_layout:
        description: >-
          Orientation of the playlist thumbnail

          Layout must be one of:
              + landscape
              + poster
              + square
        example: landscape
        type: string
      site_id:
        description: Site the playlist is related to
        example: 593031674d740d01cd000000
        type: string
      video_ids:
        description: IDs of videos that are associated with Playlist
        type: object
      images:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Image'
      categories:
        description: ''
        type: array
        items:
          $ref: '#/definitions/EmbeddedCategory'
      sort_options:
        description: ''
        type: array
        items:
          $ref: '#/definitions/SortOption'
  Thumbnail:
    title: Thumbnail
    type: object
    properties:
      aspect_ration:
        description: ''
        example: 1.3
        type: number
        format: double
      height:
        description: Height of the image in pixels
        example: 250
        type: number
        format: double
      width:
        description: Width of the image in pixels
        example: 250
        type: number
        format: double
      name:
        description: Custom name of the thumbnail
        example: Thumbnail Name
        type: string
      url:
        description: ''
        example: https://images.google.com
        type: string
  PlaylistRequest:
    title: PlaylistRequest
    type: object
    properties:
      playlist:
        $ref: '#/definitions/Playlist'
  RedemptionCode:
    title: RedemptionCode
    type: object
    properties:
      code:
        description: ''
        example: RQMJQJB5JX5V6JQ5
        type: string
      expiration_date:
        description: ''
        type: string
      video_id:
        description: ''
        example: 570dabc8f28347ccfc02e939
        type: string
      pass_plan_id:
        description: ''
        type: string
      plan_id:
        description: ''
        type: string
      playlist_id:
        description: ''
        type: string
      transaction_id:
        description: ''
        type: string
  RedemptionCodeMetadata:
    title: RedemptionCodeMetadata
    example:
      _id: 57165ffff283475d1e000002
      content_title: Title of content
      content_type: video
      created_at: '"2016-04-19T16:42:39.369+00:00"'
      redeemed_at: null
      site_id: 5468fd6569702d17ee500000
      updated_at: '"2016-04-19T16:42:39.369+00:00"'
      nice_code: RQMJ
      available: true
      redeemed: false
      expired: false
      code: RQMJQJB5JX5V6JQ5
      expiration_date: null
      video_id: 570dabc8f28347ccfc02e939
      pass_plan_id: null
      plan_id: null
      playlist_id: null
      transaction_id: null
    type: object
    properties:
      _id:
        description: ''
        example: 57165ffff283475d1e000002
        type: string
      content_title:
        description: ''
        example: Title of content
        type: string
      content_type:
        description: ''
        example: video
        type: string
      created_at:
        description: ''
        example: 4/19/2016 4:42:39 PM
        type: string
      redeemed_at:
        description: ''
        type: string
      site_id:
        description: ''
        example: 5468fd6569702d17ee500000
        type: string
      updated_at:
        description: ''
        example: 4/19/2016 4:42:39 PM
        type: string
      nice_code:
        description: QJB5-JX5V-6JQ5
        example: RQMJ
        type: string
      available:
        description: ''
        example: true
        type: string
      redeemed:
        description: ''
        example: false
        type: string
      expired:
        description: ''
        example: false
        type: string
      code:
        description: ''
        example: RQMJQJB5JX5V6JQ5
        type: string
      expiration_date:
        description: ''
        type: string
      video_id:
        description: ''
        example: 570dabc8f28347ccfc02e939
        type: string
      pass_plan_id:
        description: ''
        type: string
      plan_id:
        description: ''
        type: string
      playlist_id:
        description: ''
        type: string
      transaction_id:
        description: ''
        type: string
  RedemptionCodeRequest:
    title: RedemptionCodeRequest
    type: object
    properties:
      redemption_code:
        $ref: '#/definitions/RedemptionCode45'
  RedemptionCode45:
    title: redemption_code45
    type: object
    properties:
      code:
        description: ''
        example: RQMJQJB5JX5V6JQ5
        type: string
      expiration_date:
        description: ''
        type: string
      video_id:
        description: ''
        example: 570dabc8f28347ccfc02e939
        type: string
      pass_plan_id:
        description: ''
        type: string
      plan_id:
        description: ''
        type: string
      playlist_id:
        description: ''
        type: string
      transaction_id:
        description: ''
        type: string
  RevenueModelMetadata:
    title: RevenueModelMetadata
    example:
      _id: 5429b1c369702d2f7c040000
      created_at: 2014-09-29T19:23:47.3020000+00:00
      image_content_type: image/png
      image_file_name: desktop.png
      image_file_size: 19347
      image_fingerprint: a661d27f5003bcf1523f75e3686f6b24
      image_updated_at: 2014-09-29T19:23:47.0990000+00:00
      name: Desktop
      updated_at: 2014-09-29T19:23:47.3020000+00:00
    type: object
    properties:
      _id:
        description: ''
        example: 5429b1c369702d2f7c040000
        type: string
      created_at:
        description: ''
        example: 9/29/2014 7:23:47 PM
        type: string
      image_content_type:
        description: ''
        example: image/png
        type: string
      image_file_name:
        description: ''
        example: desktop.png
        type: string
      image_file_size:
        description: ''
        example: 19347
        type: string
      image_fingerprint:
        description: ''
        example: a661d27f5003bcf1523f75e3686f6b24
        type: string
      image_updated_at:
        description: ''
        example: 9/29/2014 7:23:47 PM
        type: string
      name:
        description: ''
        example: Desktop
        type: string
      updated_at:
        description: ''
        example: 9/29/2014 7:23:47 PM
        type: string
  Segment:
    title: Segment
    type: object
    properties:
      video_id:
        description: ''
        example: 59a6cef251cc430067000440
        type: string
      start:
        description: When the segment starts
        example: 90
        type: number
        format: double
      end:
        description: When the segment ends
        example: 120
        type: number
        format: double
      description:
        description: Description of segment
        example: Description of what the segment is about
        type: string
  SegmentMetadata:
    title: SegmentMetadata
    example:
      _id: 593030e14d740d0053000032
      video_id: 59a6cef251cc430067000440
      start: 90
      end: 120
      description: Description of what the segment is about
    type: object
    properties:
      _id:
        description: ID of the record
        example: 593030e14d740d0053000032
        type: string
      video_id:
        description: ''
        example: 59a6cef251cc430067000440
        type: string
      start:
        description: When the segment starts
        example: 90
        type: number
        format: double
      end:
        description: When the segment ends
        example: 120
        type: number
        format: double
      description:
        description: Description of segment
        example: Description of what the segment is about
        type: string
  SegmentRequest:
    title: SegmentRequest
    type: object
    properties:
      segment:
        $ref: '#/definitions/Segment'
  SubscriptionMetadata:
    title: SubscriptionMetadata
    type: object
    properties:
      _id:
        description: ID of the record
        example: 5480e19869702d1ff5df0100
        type: string
      amount:
        description: ''
        example: 9.99
        type: string
      created_at:
        description: ''
        example: 11/13/2017 8:13:05 PM
        type: string
      currency:
        description: will match the Plan's currency
        example: USD
        type: string
      current_period_end_at:
        description: ''
        example: 12/13/2017 4:29:40 PM
        type: string
      current_period_start_at:
        description: ''
        example: 11/13/2017 4:29:40 PM
        type: string
      discount_amount:
        description: ''
        type: number
        format: double
      discount_duration:
        description: ''
        type: string
      discount_duration_months:
        description: ''
        type: number
        format: double
      discount_percent:
        description: ''
        type: number
        format: double
      mrr:
        description: ''
        example: 5
        type: number
        format: double
      plan_id:
        description: ''
        example: 597b4b3eb26c5d000100009c
        type: string
      site_id:
        description: ''
        example: 577148dcfef27c0d7b02206a
        type: string
      start_at:
        description: ''
        example: 11/13/2017 4:29:40 PM
        type: string
      trial_period_days:
        description: ''
        example: 4
        type: number
        format: double
      updated_at:
        description: ''
        type: string
      plan_name:
        description: ''
        example: Subscription Plan Name
        type: string
  SubscriptionRequest:
    title: SubscriptionRequest
    type: object
    properties:
      consumer_id:
        description: ''
        example: 5a09c85ef716e4000100003c
        type: string
      plan_id:
        description: ''
        example: 597b4b3eb26c5d000100009c
        type: string
      stripe_card_token:
        description: ''
        example: tok_1BNkoVChyOVkXdb8i1ZO4V7F
        type: string
      'stripe_id: sub_ClHNBH4hJPOIAbz':
        description: ''
        type: string
      braintree_payment_nonce:
        description: ''
        example: ff7f20cb-a7ca-44b0-92d9-3a298d1da184
        type: string
      braintree_id:
        description: ''
        example: 6fh5yw
        type: string
      status:
        description: ''
        example: active
        type: string
      cancelled_at:
        description: ''
        type: string
      cancel_at_period_end:
        description: ''
        type: boolean
      coupon_code:
        description: ''
        type: string
  TransactionMetadata:
    title: TransactionMetadata
    example:
      id: 59b2ffaac8a589000100001b
      created_at: '"2017-09-08T20:38:02.944+00:00"'
      expires_at: null
      site_id: 593966bf4c209f0046000000
      status: paid
      'stripe_id: ch_1AztEoChyLVkXdp8yRoQlZ5e': ''
      updated_at: null
      amount: 10.0
    type: object
    properties:
      id:
        description: ''
        example: 59b2ffaac8a589000100001b
        type: string
      created_at:
        description: ''
        example: 9/8/2017 8:38:02 PM
        type: string
      expires_at:
        description: ''
        type: string
      site_id:
        description: ''
        example: 593966bf4c209f0046000000
        type: string
      status:
        description: ''
        example: paid
        type: string
      'stripe_id: ch_1AztEoChyLVkXdp8yRoQlZ5e':
        description: ''
        type: string
      updated_at:
        description: ''
        type: string
      amount:
        description: ''
        example: 10.0
        type: string
  TransactionRequest:
    title: TransactionRequest
    type: object
    properties:
      consumer_id:
        description: ''
        example: 59b2ff9dc8a5890001000019
        type: string
      video_id:
        description: ''
        example: 597f59eb40c30c0001000001
        type: string
      playlist_id:
        description: ''
        type: string
      pass_plan_id:
        description: ''
        type: string
      currency:
        description: ''
        example: USD
        type: string
      description:
        description: ''
        example: Transaction details
        type: string
      transaction_type:
        description: >-
          Must be one of:
              + purchase
              + rental
              + pass
        example: purchase
        type: string
      'payment_nonce: tok_1AztEkChyLVkXdp8SWnuwAeW':
        description: ''
        type: string
      roku_id:
        description: ''
        type: string
      apple_id:
        description: ''
        type: string
      third_party_id:
        description: ''
        type: string
  Video:
    title: Video
    type: object
    properties:
      active:
        description: ''
        type: boolean
      country:
        description: The country the video was created in
        example: USA
        type: string
      description:
        description: Full length description of the video
        example: Example of a description
        type: string
      short_description:
        description: Brief description of the video
        example: Example of a short description
        type: string
      disable_at:
        description: Timestamp of when your video will become inactive
        type: string
      enable_at:
        description: Timestamp of when your video will become active
        type: string
      episode:
        description: Episode number
        type: number
        format: double
      season:
        description: Season number
        type: number
        format: double
      featured:
        description: ''
        type: boolean
      friendly_title:
        description: The URL friendly title of the video
        example: friendly-title-url
        type: string
      keywords:
        description: Keywords for the video
        type: array
        items:
          type: string
      mature_content:
        description: Whether or not the video requires the viewer to be 18+ to view
        type: boolean
      pass_required:
        description: ''
        type: boolean
      published_at:
        description: Timestamp when video was published
        example: 6/27/2017 9:00:00 PM
        type: string
      subscription_required:
        description: ''
        type: boolean
      discovery_url:
        description: URL where your video can be discovered
        example: https://your-site.com
        type: string
      custom_thumbnail_url:
        description: URL where your custom thumbnail is stored
        example: https://images.your-site.com
        type: string
      subscription_ads_enabled:
        description: ''
        type: boolean
      title:
        description: Title of the video
        example: Video Title
        type: string
      zobject_ids:
        description: IDs of Zobjects
        type: object
      custom_attributes:
        description: Any custom attributes you want to attribute to the video
        type: object
      categories_attributes:
        description: ''
        type: array
        items:
          $ref: '#/definitions/EmbeddedCategory'
      segments:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Segment'
      images_attributes:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Image'
  VideoEntitlement:
    title: VideoEntitlement
    type: object
    properties:
      expires_at:
        description: ''
        type: string
      transaction_id:
        description: ''
        example: 57214ac2098388d3a800000c
        type: string
      transaction_type:
        description: ''
        example: purchase
        type: string
      video_id:
        description: ''
        example: 574decf509838854f1000183
        type: string
  VideoEntitlementMetadata:
    title: VideoEntitlementMetadata
    example:
      _id: 574df05109838853df000001
      consumer_id: 5543e4a269702d070d330600
      created_at: '"2017-05-31T20:13:05.437+00:00"'
      updated_at: null
      video_title: Sample Video
      expires_at: null
      transaction_id: 57214ac2098388d3a800000c
      transaction_type: purchase
      video_id: 574decf509838854f1000183
    type: object
    properties:
      _id:
        description: ''
        example: 574df05109838853df000001
        type: string
      consumer_id:
        description: ''
        example: 5543e4a269702d070d330600
        type: string
      created_at:
        description: ''
        example: 5/31/2017 8:13:05 PM
        type: string
      updated_at:
        description: ''
        type: string
      video_title:
        description: ''
        example: Sample Video
        type: string
      expires_at:
        description: ''
        type: string
      transaction_id:
        description: ''
        example: 57214ac2098388d3a800000c
        type: string
      transaction_type:
        description: ''
        example: purchase
        type: string
      video_id:
        description: ''
        example: 574decf509838854f1000183
        type: string
  VideoEntitlementRequest:
    title: VideoEntitlementRequest
    type: object
    properties:
      entitlement:
        $ref: '#/definitions/Entitlement'
  VideoFavoriteMetadata:
    title: VideoFavoriteMetadata
    example:
      _id: 57cbb1231c4f960kj2015812
      consumer_id: 57cbg120e43f9aa981018199
      created_at: '"2016-09-04T05:26:59.48+00:00"'
      updated_at: null
      video_id: 56d7594a8f7aca08aabbc8e3
    type: object
    properties:
      _id:
        description: ''
        example: 57cbb1231c4f960kj2015812
        type: string
      consumer_id:
        description: ''
        example: 57cbg120e43f9aa981018199
        type: string
      created_at:
        description: ''
        example: 9/4/2016 5:26:59 AM
        type: string
      updated_at:
        description: ''
        type: string
      video_id:
        description: ''
        example: 56d7594a8f7aca08aabbc8e3
        type: string
  VideoFavoriteRequest:
    title: VideoFavoriteRequest
    type: object
    properties:
      video_id:
        description: ''
        example: 56d7594a8f7aca08aabbc8e3
        type: string
  VideoManifest:
    title: VideoManifest
    example:
      _id: 59db911f6e82c2000100000e
      url: https://1hc0aipw92.execute
    type: object
    properties:
      _id:
        description: ''
        example: 59db911f6e82c2000100000e
        type: string
      url:
        description: api.us-east-1.amazonaws.com/latest/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhZF91cmwiOiJodHRwczovL3p5cGVsaXZlLWxoLmFrYW1haWhkLXN0YWdpbmcubmV0L2kvZGVmYXVsdF8xQEFzdGFjb21tL21hc3Rlci5tM3U4P3N0YXJ0PTE1MDc1NjE3MjkmaGRudHM9ZXhwJTNEMTUwODUzNTMxNSU3RWFjbCUzRCUyRiolNDBBc3RhY29tbSUyRiolN0VobWFjJTNENjhjMDU2MjRjNzQ0YzY4MWUyNDQ2YjcyZGFjYzllN2U1MWNhYTA5ZWRjZjgyNTk5ZTUwYzI0MmQ2ZjQzMWQ2MSIsInZpZGVvX2lkIjoiNTlkYjkxMWY2ZTgyYzIwMDAxMDAwMDBlIiwic2l0ZV9pZCI6IjU5ODMzMmVlODExMzc4MDAwMTAwMDBlNyIsImRhdGUiOiIyMDE3LTEwLTE5VDIxOjM1OjE1KzAwOjAwIiwiZW52Ijoic3RhZ2UifQ.v2H5T5BHO5jYFE2AQ1TW7EP33624up7oM3KuNOg6BBY
        example: https://1hc0aipw92.execute
        type: string
  VideoMetadata:
    title: VideoMetadata
    type: object
    properties:
      _id:
        description: ID of the record
        example: 59553e1a805cd90024001c47
        type: string
      created_at:
        description: Timestamp video was created
        example: 6/29/2017 5:51:22 PM
        type: string
      deleted_at:
        description: Timestamp video was deleted
        type: string
      updated_at:
        description: Timestamp of when video was last updated
        type: string
      on_air:
        description: ''
        type: boolean
      purchase_price:
        description: Amount to purchase the video
        type: number
        format: double
      purchase_required:
        description: Whether or not the video must be purchased
        type: boolean
      rating:
        description: Overall rating of the video
        type: number
        format: double
      related_playlist_ids:
        description: IDs of related playlists
        type: array
        items:
          type: number
          format: double
      rental_duration:
        description: Number of days video can be rented
        type: number
        format: double
      rental_price:
        description: Price to rent video
        type: number
        format: double
      rental_required:
        description: ''
        type: boolean
      request_count:
        description: Number of times a video has be requested
        type: number
        format: double
      site_id:
        description: Site the videos is related to
        example: 593031674d740d01cd000000
        type: string
      status:
        description: >-
          Status of the video. Options are:

          - created

          - ready
        type: string
      crunchyroll_id:
        description: ID of Crunchyroll source
        type: string
      hulu_id:
        description: ID of Hulu source
        type: string
      mrss_id:
        description: ID of MRSS source
        type: string
      kaltura_id:
        description: ID of Kaltura source
        type: string
      vimeo_id:
        description: ID of the Vimeo source
        type: string
      youtube_id:
        description: ID of the YouTube source
        type: string
      thumbnails:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Thumbnail'
      transcoded:
        description: ''
        type: boolean
      video_zobjects:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Zobject'
      active:
        description: ''
        type: boolean
      country:
        description: The country the video was created in
        example: USA
        type: string
      description:
        description: Full length description of the video
        example: Example of a description
        type: string
      short_description:
        description: Brief description of the video
        example: Example of a short description
        type: string
      disable_at:
        description: Timestamp of when your video will become inactive
        type: string
      enable_at:
        description: Timestamp of when your video will become active
        type: string
      episode:
        description: Episode number
        type: number
        format: double
      season:
        description: Season number
        type: number
        format: double
      featured:
        description: ''
        type: boolean
      friendly_title:
        description: The URL friendly title of the video
        example: friendly-title-url
        type: string
      keywords:
        description: Keywords for the video
        type: array
        items:
          type: string
      mature_content:
        description: Whether or not the video requires the viewer to be 18+ to view
        type: boolean
      pass_required:
        description: ''
        type: boolean
      published_at:
        description: Timestamp when video was published
        example: 6/27/2017 9:00:00 PM
        type: string
      subscription_required:
        description: ''
        type: boolean
      discovery_url:
        description: URL where your video can be discovered
        example: https://your-site.com
        type: string
      custom_thumbnail_url:
        description: URL where your custom thumbnail is stored
        example: https://images.your-site.com
        type: string
      subscription_ads_enabled:
        description: ''
        type: boolean
      title:
        description: Title of the video
        example: Video Title
        type: string
      zobject_ids:
        description: IDs of Zobjects
        type: object
      custom_attributes:
        description: Any custom attributes you want to attribute to the video
        type: object
      categories_attributes:
        description: ''
        type: array
        items:
          $ref: '#/definitions/EmbeddedCategory'
      segments:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Segment'
      images_attributes:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Image'
  Zobject:
    title: Zobject
    type: object
    properties:
      title:
        description: ''
        example: 549dc72d636872c09d1f0000
        type: string
      description:
        description: ''
        example: English actor known for his portrayal of Gandalf the Wizard
        type: string
      friendly_title:
        description: mckellen
        example: ian
        type: string
      keywords:
        description: ''
        type: array
        items:
          type: string
      active:
        description: ''
        example: true
        type: string
      zobject_type_title:
        description: ''
        example: actor
        type: string
  VideoImport:
    title: VideoImport
    type: object
    properties:
      title:
        description: ''
        example: Import title
        type: string
      video_source_id:
        description: ''
        example: 59553dde04c45800a7000001
        type: string
      _id:
        description: ID of video import
        example: 59553de4805cd900240004d3
        type: string
      created_at:
        description: Timestamp video import was created
        example: 6/29/2017 5:50:28 PM
        type: string
      deleted_at:
        description: Timestamp video was deleted
        type: string
      updated_at:
        description: Timestamp of when video was last updated
        type: string
      description:
        description: Description of the video import
        example: Import description
        type: string
      duration:
        description: Length of video import
        example: 90
        type: number
        format: double
      episode:
        description: Episode number
        example: 2
        type: number
        format: double
      expires_at:
        description: Timestamp of when video import expires
        type: string
      files:
        description: ''
        type: array
        items:
          $ref: '#/definitions/File24'
      keywords:
        description: Keywords for the video import
        type: array
        items:
          type: string
      published_at:
        description: Timestamp when video from video import will be published
        example: 10/24/2015 4:00:00 AM
        type: string
      season:
        description: ''
        example: 3
        type: number
        format: double
      site_id:
        description: ''
        example: 593031674d740d01cd000000
        type: string
      starts_at:
        description: ''
        type: string
      status:
        description: ''
        example: ready
        type: string
      thumbnails:
        description: ''
        type: array
        items:
          $ref: '#/definitions/Thumbnail'
      upload_id:
        description: ''
        type: string
      video_id:
        description: ''
        type: string
    required:
    - title
    - video_source_id
  VideoRequest:
    title: VideoRequest
    type: object
    properties:
      video:
        $ref: '#/definitions/Video'
  VideoSource:
    title: VideoSource
    type: object
    properties:
      name:
        description: ''
        example: Video Import
        type: string
      guid:
        description: Globally unique identifier given by the video source
        example: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
        type: string
      affiliate_code:
        description: >-
          You can update this field for the following video source types:

          - Crunchyroll
        example: az-58106-hrye
        type: string
      partner_name:
        description: >-
          You can update this field for the following video source types:

          - Hulu
        example: Hulu Name
        type: string
      category_id:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        example: 59552426cbd3d90001000000
        type: string
      auto_activate:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      auto_add:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      auto_deactivate:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      sync_interval:
        description: >-
          Options are:

          + daily

          + hourly
        type: string
      sync_video_data_source:
        description: ''
        type: boolean
      url:
        description: >-
          URL of the MRSS feed. You can update this field for the following video source types:

          - MRSS
        type: string
      import_from:
        description: Starting date of a date range to import from
        type: string
      import_to:
        description: Ending date of a date range to import to
        type: string
      editable:
        description: ''
        type: boolean
      video_count:
        description: How many videos are part of this video source
        example: 0
        type: string
  VideoSourceMetadata:
    title: VideoSourceMetadata
    example:
      name: Video Import
      guid: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
      affiliate_code: az-58106-hrye
      partner_name: Hulu Name
      category_id: 59552426cbd3d90001000000
      auto_activate: false
      auto_add: false
      auto_deactivate: false
      sync_interval: daily
      sync_video_data_source: true
      url: ''
      import_from: null
      import_to: null
      editable: true
      video_count: 0
      _id: 5468f40d4c616e0a770d0000
      created_at: '"2014-11-16T18:59:25.42+00:00"'
      updated_at: null
      status: created
    type: object
    properties:
      _id:
        description: ID of video source
        example: 5468f40d4c616e0a770d0000
        type: string
      created_at:
        description: Timestamp video source was created
        example: 11/16/2014 6:59:25 PM
        type: string
      updated_at:
        description: Timestamp of when the source was last updated
        type: string
      status:
        description: >-
          Status of the video. Options are:

          - created

          - ready
        type: string
      name:
        description: ''
        example: Video Import
        type: string
      guid:
        description: Globally unique identifier given by the video source
        example: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
        type: string
      affiliate_code:
        description: >-
          You can update this field for the following video source types:

          - Crunchyroll
        example: az-58106-hrye
        type: string
      partner_name:
        description: >-
          You can update this field for the following video source types:

          - Hulu
        example: Hulu Name
        type: string
      category_id:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        example: 59552426cbd3d90001000000
        type: string
      auto_activate:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      auto_add:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      auto_deactivate:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      sync_interval:
        description: >-
          Options are:

          + daily

          + hourly
        type: string
      sync_video_data_source:
        description: ''
        type: boolean
      url:
        description: >-
          URL of the MRSS feed. You can update this field for the following video source types:

          - MRSS
        type: string
      import_from:
        description: Starting date of a date range to import from
        type: string
      import_to:
        description: Ending date of a date range to import to
        type: string
      editable:
        description: ''
        type: boolean
      video_count:
        description: How many videos are part of this video source
        example: 0
        type: string
  VideoSourceRequest:
    title: VideoSourceRequest
    type: object
    properties:
      video_source:
        $ref: '#/definitions/VideoSource71'
  VideoSource71:
    title: video_source71
    type: object
    properties:
      name:
        description: ''
        example: Video Import
        type: string
      guid:
        description: Globally unique identifier given by the video source
        example: 1f215f3c-r63c-b54d-cf2u-a44e734af95g
        type: string
      affiliate_code:
        description: >-
          You can update this field for the following video source types:

          - Crunchyroll
        example: az-58106-hrye
        type: string
      partner_name:
        description: >-
          You can update this field for the following video source types:

          - Hulu
        example: Hulu Name
        type: string
      category_id:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        example: 59552426cbd3d90001000000
        type: string
      auto_activate:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      auto_add:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      auto_deactivate:
        description: >-
          You can update this field for the following video source types:

          - MRSS
        type: boolean
      sync_interval:
        description: >-
          Options are:

          + daily

          + hourly
        type: string
      sync_video_data_source:
        description: ''
        type: boolean
      url:
        description: >-
          URL of the MRSS feed. You can update this field for the following video source types:

          - MRSS
        type: string
      import_from:
        description: Starting date of a date range to import from
        type: string
      import_to:
        description: Ending date of a date range to import to
        type: string
      editable:
        description: ''
        type: boolean
      video_count:
        description: How many videos are part of this video source
        example: 0
        type: string
  VideoZobject:
    title: VideoZobject
    type: object
    properties:
      _id:
        description: ''
        example: 549dc72d636872c09d1f0000
        type: string
      title:
        description: ''
        example: Ian McKellen
        type: string
      description:
        description: ''
        example: English actor known for his portrayal of Gandalf the Wizard
        type: string
      zobject_type_title:
        description: ''
        example: actor
        type: string
  ZobjectMetadata:
    title: ZobjectMetadata
    type: object
    properties:
      _id:
        description: ''
        example: 549dc72d636872c09d1f0000
        type: string
      created_at:
        description: ''
        example: 12/26/2014 8:38:05 PM
        type: string
      site_id:
        description: ''
        example: 549dc583636872c09d110000
        type: string
      updated_at:
        description: ''
        type: string
      video_ids:
        description: ''
        type: array
        items:
          type: string
      zobject_type_id:
        description: ''
        example: 549dc71f636872c09d1d0000
        type: string
      pictures:
        description: ''
        type: array
        items:
          $ref: '#/definitions/PictureMetadata'
      title:
        description: ''
        example: 549dc72d636872c09d1f0000
        type: string
      description:
        description: ''
        example: English actor known for his portrayal of Gandalf the Wizard
        type: string
      friendly_title:
        description: mckellen
        example: ian
        type: string
      keywords:
        description: ''
        type: array
        items:
          type: string
      active:
        description: ''
        example: true
        type: string
      zobject_type_title:
        description: ''
        example: actor
        type: string
  PictureMetadata:
    title: PictureMetadata
    type: object
    properties:
      _id:
        description: ''
        example: 597b5ab9ebd8f70001000003
        type: string
      styles:
        $ref: '#/definitions/Styles'
      content_type:
        description: ''
        example: image/png
        type: string
      updated_at:
        description: ''
        type: string
      url:
        description: ''
        example: http://upload-url.com/name.png
        type: string
  Styles:
    title: styles
    type: object
    properties:
      original:
        $ref: '#/definitions/Original'
  Original:
    title: original
    type: object
    properties:
      url:
        description: ''
        example: http://upload-url.com/name.png
        type: string
      size:
        description: ''
        example: 100%
        type: string
  ZobjectRequest:
    title: ZobjectRequest
    type: object
    properties:
      zobject:
        $ref: '#/definitions/Zobject'
  Picture:
    title: Picture
    type: object
    properties:
      title:
        description: ''
        example: Zobject Title
        type: string
      caption:
        description: ''
        example: Zobject Caption
        type: string
  ZobjectAttribute:
    title: ZobjectAttribute
    type: object
    properties:
      description:
        description: Description of the Zobject Type custom attribute
        example: Thumbnail
        type: string
      field_name:
        description: Name of the Zobject Type custom attribute
        example: picture
        type: string
      field_type:
        description: type of the Zobject Type custom attribute
        example: String
        type: string
  ZobjectAttributeMetadata:
    title: ZobjectAttributeMetadata
    type: object
    properties:
      _id:
        description: ID of the record
        example: 597a5f18841b2c0001000001
        type: string
      created_at:
        description: ''
        example: 7/27/2017 9:46:00 PM
        type: string
      updated_at:
        description: ''
        type: string
      description:
        description: Description of the Zobject Type custom attribute
        example: Thumbnail
        type: string
      field_name:
        description: Name of the Zobject Type custom attribute
        example: picture
        type: string
      field_type:
        description: type of the Zobject Type custom attribute
        example: String
        type: string
  ZobjectType:
    title: ZobjectType
    type: object
    properties:
      description:
        description: Description of the Zobject Type
        example: Thumbnails for videos
        type: string
      title:
        description: Title of the Zobject Type (must be unique)
        example: Type Title
        type: string
      videos_enabled:
        description: Indicates whether videos can be associated with instances of the Zobject Type
        example: true
        type: boolean
  ZobjectTypeMetadata:
    title: ZobjectTypeMetadata
    example:
      _id: 546cd8124c616e043d010000
      created_at: '"2014-11-19T17:49:06.385+00:00"'
      site_id: 545932274c616e2359000000
      updated_at: '"2014-11-19T17:49:06.385+00:00"'
      zobject_count: 2
      description: Thumbnails for videos
      title: Type Title
      videos_enabled: true
      zobject_attributes:
        _id: 597a5f18841b2c0001000001
        created_at: '"2017-07-27T21:46:00.836+00:00"'
        updated_at: null
        description: Thumbnail
        field_name: picture
        field_type: String
    type: object
    properties:
      _id:
        description: ID of the record
        example: 546cd8124c616e043d010000
        type: string
      created_at:
        description: ''
        example: 11/19/2014 5:49:06 PM
        type: string
      site_id:
        description: ''
        example: 545932274c616e2359000000
        type: string
      updated_at:
        description: ''
        example: 11/19/2014 5:49:06 PM
        type: string
      zobject_count:
        description: Number of Zobjects created with this Zobject Type
        example: 2
        type: string
      zobject_attributes:
        $ref: '#/definitions/ZobjectAttributes'
      description:
        description: Description of the Zobject Type
        example: Thumbnails for videos
        type: string
      title:
        description: Title of the Zobject Type (must be unique)
        example: Type Title
        type: string
      videos_enabled:
        description: Indicates whether videos can be associated with instances of the Zobject Type
        example: true
        type: boolean
  ZobjectAttributes:
    title: zobject_attributes
    type: object
    properties:
      _id:
        description: ID of the record
        example: 597a5f18841b2c0001000001
        type: string
      created_at:
        description: ''
        example: 7/27/2017 9:46:00 PM
        type: string
      updated_at:
        description: ''
        type: string
      description:
        description: Description of the Zobject Type custom attribute
        example: Thumbnail
        type: string
      field_name:
        description: Name of the Zobject Type custom attribute
        example: picture
        type: string
      field_type:
        description: type of the Zobject Type custom attribute
        example: String
        type: string
  ZobjectTypeRequest:
    title: ZobjectTypeRequest
    type: object
    properties:
      zobject_type:
        $ref: '#/definitions/ZobjectType86'
  ZobjectType86:
    title: zobject_type86
    type: object
    properties:
      zobject_attributes_attributes:
        $ref: '#/definitions/ZobjectAttributesAttributes'
      description:
        description: Description of the Zobject Type
        example: Thumbnails for videos
        type: string
      title:
        description: Title of the Zobject Type (must be unique)
        example: Type Title
        type: string
      videos_enabled:
        description: Indicates whether videos can be associated with instances of the Zobject Type
        example: true
        type: boolean
  ZobjectAttributesAttributes:
    title: zobject_attributes_attributes
    type: object
    properties:
      description:
        description: Description of the Zobject Type custom attribute
        example: Thumbnail
        type: string
      field_name:
        description: Name of the Zobject Type custom attribute
        example: picture
        type: string
      field_type:
        description: type of the Zobject Type custom attribute
        example: String
        type: string
  AddZobject(s)ToVideoRequest:
    title: Add Zobject(s) to Video request
    type: object
    properties:
      zobject_id:
        description: Zobject IDs to be added
        type: object
    required:
    - zobject_id
  AddAVideoToAPlaylistRequest:
    title: Add a video to a playlist request
    type: object
    properties:
      video_id:
        description: ''
        example:
        - 593032367cebb20023000e6f
        type: array
        items:
          type: string
    required:
    - video_id
  ViewRelationsipsResponse:
    title: View Relationsips response
    example:
      playlists:
      - id: 586124bfa54d7535cb001fc2
        title: Playlist A
        priority: 0
        playlists:
        - id: 5942dde0a54d750e3b000042
          title: Playlist A.1
          priority: 0
      - id: 58d1718aa54d750bf100002e
        title: Playlist B
        priority: 1
        playlists:
        - id: 5942defea54d750e3b000045
          title: Playlist B.1
          priority: 0
          playlists:
          - id: 586124bfa54d7535cb001fba
            title: Playlist B.1.1
            priority: 0
        - id: 586124bea54d7535cb001fb1
          title: Playlist B.2
          priority: 1
    type: object
    properties:
      playlists:
        description: ''
        example:
        - id: 586124bfa54d7535cb001fc2
          title: Playlist A
          priority: 0
          playlists:
          - id: 5942dde0a54d750e3b000042
            title: Playlist A.1
            priority: 0
        - id: 58d1718aa54d750bf100002e
          title: Playlist B
          priority: 1
          playlists:
          - id: 5942defea54d750e3b000045
            title: Playlist B.1
            priority: 0
            playlists:
            - id: 586124bfa54d7535cb001fba
              title: Playlist B.1.1
              priority: 0
          - id: 586124bea54d7535cb001fb1
            title: Playlist B.2
            priority: 1
        type: array
        items:
          type: object
    required:
    - playlists
  AttachingAVideoToAVideoImportRequest:
    title: Attaching a Video to a Video Import request
    type: object
    properties:
      video_id:
        description: ''
        example: 5955293f805cd90024000151
        type: string
    required:
    - video_id
  CheckEntitlementResponse:
    title: Check Entitlement response
    example:
      message: entitled
    type: object
    properties:
      message:
        description: ''
        example: entitled
        type: string
    required:
    - message
